C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PRINCIPAL_MF
OBJECT MODULE PLACED IN .\hex\Principal_MF.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Principal_MF.C LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\libreria) DEBUG O
                    -BJECTEXTEND TABS(2) OBJECT(.\hex\Principal_MF.obj)

line level    source

   1          #include <at89c51xd2.h>
   2                      
   3          #include <stdio.h>          //                            *
   4          #include <INTRINS.H>        //                            *
   5          #include <math.h>                   //                            *          
   6          #include <string.h>
   7          #include "display.h"        //                            *
   8          #include "wiegand.h"
   9          #include "uart.h"
  10          //*******************************************************************************************
  11          //  DEFINICION DE IO DEL MICROCONTROLADOR                         *
  12          //*******************************************************************************************
  13          //sbit sw_1 = P1^2;         //Direccion                       *
  14          //sbit sw_2 = P1^3;         //Direccion                       *
  15          sbit ledv = P1^4;         //Led del boton expedidor               *
  16          sbit lock1  = P1^6;         //Relevo de Entrada                   *
  17          sbit lock2  = P1^5;         //Relevo de Salida (Inhabilitado Proc. Aux usa ERR IMP) *
  18          
  19          sbit msg1  = P0^0;          //Relevo de Salida (AUDIO)                *
  20          sbit msg2  = P0^1;          //Relevo de Salida (AUDIO)                *
  21          sbit msg3  = P0^2;          //Relevo de Salida (AUDIO)                *
  22          sbit msg4  = P0^3;          //Relevo de Salida (AUDIO)                *
  23          
  24          sbit automovil  = P1^7;       //Entrada sensor automovil / Cajon Monedero       *
  25          sbit SignalAcceso = P3^7;     //Sigue la señal de Sensor                *
  26          sbit busy=P3^5;             //                            *
  27          sbit ready=P3^4;          //                            *
  28          sbit bus_clk=P3^6;          //  
  29          //sbit RS = P1^0 ;                  /* define I/O functions     */
  30          //sbit E =  P1^1 ;                  /* P3.5             */
  31          
  32          
  33          //                        */
  34          //*******************************************************************************************
  35           unsigned char sin_sensor   []= "ERROR:  LOOP 1  " ;
  36           unsigned char linea        []= " FUERA DE LINEA " ;
  37           unsigned char err_mifare   []= " ERROR MIFARE   " ;
  38           unsigned char err_cod      []= "ERROR COD. PARQ." ;
  39           unsigned char err_in       []= "  SIN INGRESO   " ;
  40           unsigned char err_sinpago  []= "NO REGISTRA PAGO" ;
  41           unsigned char err_gracia   []= "EXCEDE T.GRACIA " ;
  42          
  43           unsigned char MSGnegado    []= " ACCESO NEGADO  " ;
  44           unsigned char err_out      []= "   SIN SALIDA   " ;
  45           unsigned char err_data     []= "ERROR GRABACION " ;
  46           unsigned char err_Caja     []= "ACERQUESE A CAJA" ;
  47           unsigned char serie        []= "SERIE:          " ;
  48           unsigned char matchPlate   []= "COMPARANDO PLACA" ;
  49           unsigned char tarjeta_venc []= "TARJETA VENCIDA " ;
  50          //******************************************************************************************* 
  51          
  52          #define    cte_seg  0x1c
  53          #define    cte_retry  0x2a
  54          
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 2   

  55          
  56           unsigned char seg,k;
  57          
  58           unsigned char g_cContByteRx=0;
  59           unsigned char g_cDirBoard=0x31;
  60          
  61           unsigned char num_chr;
  62           unsigned char g_cRelevos;
  63           unsigned int TimeOut_Codigo;
  64           unsigned int TimeOut_Wiegand;
  65           unsigned char TimeOutLinea;
  66           unsigned char len_buffer;
  67           unsigned char num_data;
  68          
  69           unsigned int iTimeEsperaRtaLPR=0;
  70          
  71           unsigned char Ini_Fecha;
  72           unsigned char Ini_Dcto;
  73          
  74           unsigned char YearIn;
  75           unsigned char MonthIn;
  76           unsigned char DayIn;
  77           unsigned char HourIn;
  78           unsigned char MinutIn;
  79          
  80           unsigned char YearOut;
  81           unsigned char MonthOut;
  82           unsigned char DayOut;
  83           unsigned char HourOut;
  84           unsigned char MinutOut;
  85          
  86           unsigned char Tipo_Vehiculo;
  87           unsigned char xTipo_Vehiculo;
  88           unsigned int TimeOut_Send_Acceso=0;
  89          
  90           unsigned char NumDatRetry=0;
  91          
  92          //ESTADOR RECEPCION SOFTWARE
  93          
  94          #define ESPERA_RX       0
  95          #define VER_DIR         1
  96          #define VER_COMANDO       2
  97          #define POLL_COM_SOF      3
  98          #define WRITE_COM_SOF     4
  99          #define RECEPCION_STR_SOF_STX 5
 100          #define SAVE_STR_SOF      6
 101          #define ANALICE_STR_SOF     7
 102          #define RECEPCION_ID      8
 103          
 104          
 105          #define TAMANO_RX_COM_SOFT  60  
 106          #define TAMANO_TX_COM_SOFT  50
 107          
 108          //ESTADOR TRANSMICION SOFTWARE
 109          
 110          #define SIN_LECTURA_TX  0x00
 111          #define LECTURA_COD_TX  0x01
 112          #define LECTURA_WIEG_TX 0x02
 113          #define COD_PRINT_TX  0x04
 114          #define LPR_TX      0x08   //reconocimiento placa
 115          
 116          unsigned char g_cEstadoComSoft=ESPERA_RX;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 3   

 117          unsigned char g_cEstadoTxSoft=SIN_LECTURA_TX;
 118          
 119          
 120          
 121          
 122          unsigned char g_scArrRxComSoft[TAMANO_RX_COM_SOFT];
 123          unsigned char g_scArrTxComSoft[TAMANO_TX_COM_SOFT];
 124          
 125          unsigned char g_scArrDisplay[32];
 126          
 127          unsigned char xdata buffer_bus[30];
 128          
 129           unsigned char xdata BufferRetry[20];
 130          
 131          
 132           unsigned char xdata buffer_ticket[20];
 133          
 134           unsigned char xdata buffer_placa[10];
 135          
 136           extern unsigned char xdata buffer_wie[];
 137           unsigned char xdata buffer_wieLPR[4];
 138           unsigned char xdata buffer_Cupo[5];    //buffer donde almaceno el numero de cupos jp
 139          
 140          
 141          
 142           unsigned char  NumDatosPlate=0;
 143           unsigned char  Max_Len_Placa=0;
 144           unsigned char  NumChrTicket=0;
 145           unsigned char  Num_Char_LPR=0;
 146          
 147           unsigned char temp;
 148           unsigned char Rechazo;
 149           unsigned char Seg_OFF=5;
 150           unsigned char TimeRetryCmd=0;
 151           char nbitsW;
 152           unsigned char Cod_Dcto;
 153           
 154           
 155           unsigned int OpenMensual_Apx=0;
 156          
 157          #define ENQ 5
 158          #define EOT 4
 159          #define ACK 6
 160          #define STX 2
 161          #define ETX 3
 162          #define CR  0x0d
 163          #define LF  0x0a
 164          
 165          #define GRACIAS     0X01
 166          #define BIENVENIDO    0X02
 167          #define NO_REGIST   0X04
 168          #define LOT_FULL    0X05
 169          #define ERROR_LOOP  0x06
 170          #define EXCEDE_HORARIO  0X07
 171          #define MENSUAL_NO_PAGO 0X08
 172          #define UN_MOMENTO      0X09
 173          
 174          #define SOLICITA_EVN  0XAA
 175          
 176          #define NO_MENSUAL  0XB1
 177          #define NO_IN_PARK  0XB2
 178          #define IN_PARK   0Xb3
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 4   

 179          #define EXPIRO    0Xb4
 180          #define HORARIO   0Xb5
 181          #define OFF_LINE  0XB6
 182          #define ON_LINE   0XB7
 183          #define IN_HORARIO  0Xb8
 184          #define DiaX    0XB9
 185          
 186          #define ACCESO    0Xab
 187          
 188          
 189          #define PICO_PLACA    0XF3
 190          #define RECHAZADA   0XF9
 191          #define SIN_TARJETAS    0XFA
 192          
 193          
 194          #define TIMEW   0x1e          //Tiempo para indicar TimeOut
 195          #define T_MS    20          // Base para 1ms en Espera a tx Bus
 196          #define MAX_CHR   30          // Maximo Numero CHR a recibir del secundario
 197          
 198          
 199          #define LOOP  0
 200          #define CARD  1
 201          
 202          
 203           bit sendactive=0;                // flag: marks transmitter active
 204           bit rx_dat=0;
 205           bit toggle=0;
 206          
 207           bit rx_serie=0;
 208           bit bandera_rx_soft=0;
 209           bit txACK=0;
 210          
 211           bit inicio_wiegand;
 212           bit lectura_wiegand;
 213          // bit flanco_wiegand;
 214          
 215           bit audio1=0;
 216           bit audio2=0;                
 217           bit audio3=0;
 218           bit audio4=0;
 219          
 220           bit msg_error=0;      
 221           bit notifyEVP;
 222           bit retry;
 223           bit FueraLinea=0;
 224           bit ACCESO_USE_LPR;
 225           bit Flag_Dcto=0;
 226           bit datos_validos=0;
 227           bit Dif_Mot_Car=0;
 228           bit send_markCashierAut;
 229           bit Send_Wiegand=0;
 230           bit InhabilitaPulsoEvPOut=0;
 231           bit Send_Tipo_Veh=CARD;    //modificado 23/01/2019 jp          LOOP;
 232           bit SerieOK=0;
 233           bit Dato_OffLine=0;
 234           bit Off_Line_Salida=0;
 235           bit Atascado=0;
 236           bit Habilita_Lectura=1;
 237          
 238           bit Dato_Placa=0;
 239           bit Tiquete_Placa=0;
 240           bit Tiquete_Salida=0;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 5   

 241          
 242           bit Tx_Acceso=0;
 243           bit SalidaW=0;
 244           bit Central_ID_OFFLINE=0;
 245           bit OrigenTipoVeh=CARD;
 246           bit ErrorTx=0;
 247           bit RetryCmd=0;
 248          
 249          
 250          extern unsigned char completo;
 251          extern  unsigned char codebits[];
 252          extern  unsigned char nex_bit;
 253          extern  unsigned char facility_code;
 254          extern  unsigned char card_number;
 255          extern  unsigned char card_number1;
 256          extern  unsigned char card_number2;
 257          
 258          //*******************************************************************************************
 259          void Pulso_Bus(void)
 260          {
 261   1        bus_clk=0;
 262   1        wait_ancho();
 263   1        wait_ancho();
 264   1        wait_ancho();
 265   1        bus_clk=1;
 266   1        wait_ancho();
 267   1        wait_ancho();
 268   1      }
 269          
 270          //********************************************************************************************************
             -******
 271          bit tx_bus (unsigned char num_chr)
 272          {
 273   1          unsigned char j;
 274   1        long int cont;
 275   1        bit timeOut;
 276   1      
 277   1        bus_clk=1;            // Asegura pulso de Clk en 1
 278   1        timeOut=0;            // Borra Bandera de Time Out
 279   1        busy=0;             // Genera Peticion de Atencion al Secundario
 280   1        cont=T_MS*200;          // 500 ms  cambio echo jp 100 por 200
 281   1      //----------------------------------------
 282   1        while ((ready==1)&&(timeOut==0))
 283   1        {
 284   2          cont--;
 285   2          if (cont==0)
 286   2          {
 287   3            timeOut=1;
 288   3            bus_clk=1;
 289   3            ready=1;
 290   3            busy=1;
 291   3          }
 292   2        }
 293   1      //---------------------------------------
 294   1          if (timeOut==0)
 295   1        {
 296   2          for (j=0; j<num_chr; j++)
 297   2          {
 298   3              P2=buffer_bus[j];
 299   3            Pulso_Bus();
 300   3          }
 301   2      
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 6   

 302   2        }
 303   1      //---------------------------------------
 304   1        bus_clk=1;
 305   1      //  ready=1;
 306   1        busy=1;
 307   1        
 308   1        if (timeOut==0)
 309   1        {
 310   2          wait_long();
 311   2          wait_long();
 312   2          wait_long();
 313   2          wait_long();
 314   2      //    wait_long();
 315   2        }
 316   1        return timeOut;
 317   1      }
 318          
 319          //********************************************************************************************************
             -******
 320          
 321          //********************************************************************************************************
             -******
 322          //*******************************************************************************************
 323          void send_dataCLK(unsigned char fc, dir)
 324          {
 325   1        unsigned int valor;
 326   1        unsigned char centena, decena, unidad;
 327   1        valor=0;
 328   1      
 329   1        centena=0;
 330   1        decena=0;
 331   1        unidad=0;
 332   1         
 333   1        while (fc>=0x064)         // resto 100
 334   1        {
 335   2          fc=fc-0x64;
 336   2          centena=centena+1;
 337   2        }
 338   1        while (fc>=0x0a)        // resto 10
 339   1        {
 340   2          fc=fc-0x0a;
 341   2          decena=decena+1;
 342   2        }
 343   1        unidad=fc;
 344   1      
 345   1      //  vdato(centena|0x30);
 346   1        g_scArrTxComSoft[dir]=(decena|0x30);
 347   1          g_scArrTxComSoft[dir+1]=(unidad|0x30);
 348   1      }
 349          
 350          //********************************************************************************************************
             -******
 351          void relevos_aux(void)
 352          {
 353   1        (audio1==1)?(msg1=1):(msg1=0);
 354   1        (audio2==1)?(msg2=1):(msg2=0);
 355   1        (audio3==1)?(msg3=1):(msg3=0);
 356   1        (audio4==1)?(msg4=1):(msg4=0);
 357   1      }
 358          //********************************************************************************************************
             -******
 359          //********************************************************************************************
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 7   

 360          void rx_bus (void)
 361          {
 362   1        long int count;
 363   1        unsigned char timeOut,j=0;
 364   1      
 365   1      
 366   1        
 367   1        busy=1;
 368   1        num_data=0;
 369   1        if (ready==0)
 370   1        {
 371   2          timeOut=0;
 372   2          busy=0;
 373   2          for (j=0; j<MAX_CHR; j++)
 374   2          {                  //100000
 375   3            count=60;
 376   3            while ((bus_clk==1)&&(ready==0)&&(timeOut==0))
 377   3            {
 378   4              count--;
 379   4              if (count==0)
 380   4              {
 381   5                timeOut=1;
 382   5                j=MAX_CHR+1;
 383   5              }   
 384   4            }  
 385   3            if ((bus_clk==0)&&(timeOut==0)&&(ready==0))
 386   3            {
 387   4              buffer_bus[j]=P2;
 388   4              num_data++; 
 389   4              count=35;       //50000
 390   4              while ((bus_clk==0)&&(timeOut==0))
 391   4              {
 392   5                buffer_bus[j]=P2;
 393   5                count--;
 394   5                if (count==0)
 395   5                {
 396   6                  timeOut=1;
 397   6                  j=MAX_CHR+1;
 398   6                }       
 399   5              }
 400   4            }
 401   3            if (ready==1)
 402   3            {
 403   4              j=MAX_CHR+1;
 404   4            }
 405   3          }
 406   2          }
 407   1        busy=1;    
 408   1      
 409   1      }
 410          
 411          //********************************************************************************************************
             -******//**************************************************************************************************************
 412          //*******************************************************************************************
 413          //    FUNCIONES PARA VISUALIZAR FECHA HORA                        *
 414          //*******************************************************************************************
 415           void vdata_clk (unsigned char data_clk) 
 416           {
 417   1       
 418   1       unsigned int temp;
 419   1      
 420   1       temp=data_clk;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 8   

 421   1       temp=temp & 0xf0;
 422   1       temp>>=4;
 423   1       temp=temp|0x30;
 424   1       vdato(temp);
 425   1      
 426   1       temp=data_clk;
 427   1       temp=temp & 0x0f;
 428   1       temp=temp|0x30;
 429   1       vdato(temp);
 430   1      
 431   1      }
 432          
 433          //*******************************************************************************************
 434          void SendMsg(unsigned char tipo)
 435          {
 436   1        unsigned char i;
 437   1      
 438   1      
 439   1          buffer_bus[0]=STX;
 440   1          switch (tipo)
 441   1          {
 442   2            case GRACIAS:
 443   2              buffer_bus[1]='V';      
 444   2        
 445   2            break;
 446   2        
 447   2        
 448   2            case BIENVENIDO:
 449   2              buffer_bus[1]='O';
 450   2         
 451   2            break;
 452   2          }
 453   1         
 454   1          for(i=21; i<=37; i++)
 455   1          {
 456   2            buffer_bus[i-19]=g_scArrRxComSoft[i];
 457   2          }
 458   1          buffer_bus[18]=ETX;
 459   1          
 460   1          
 461   1      
 462   1          if (ready==1)
 463   1          {
 464   2            ErrorTx=tx_bus(19);
 465   2            if (ErrorTx==1)
 466   2            {
 467   3              for (i=0; i<19; i++)
 468   3              {
 469   4                BufferRetry[i]=buffer_bus[i];
 470   4              }
 471   3              NumDatRetry=19;
 472   3              TimeRetryCmd=cte_seg;
 473   3            }
 474   2          }
 475   1          else
 476   1          {
 477   2            for (i=0; i<19; i++)
 478   2            {
 479   3              BufferRetry[i]=buffer_bus[i];
 480   3            }
 481   2            NumDatRetry=19;
 482   2            TimeRetryCmd=cte_seg;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 9   

 483   2            
 484   2          }
 485   1      
 486   1                    
 487   1      
 488   1      }
 489          //********************************************************************************************************
             -******
 490          void SendRtaBus (unsigned char Respuesta)
 491          {
 492   1        if (ready==1)
 493   1        {
 494   2          buffer_bus[0]=Respuesta;    
 495   2          ErrorTx=tx_bus(1);
 496   2          if (ErrorTx==1)
 497   2          {
 498   3            NumDatRetry=1;
 499   3            BufferRetry[0]=Respuesta;
 500   3            TimeRetryCmd=cte_retry;
 501   3          }     
 502   2        }
 503   1        else
 504   1        {
 505   2          NumDatRetry=1;
 506   2          BufferRetry[0]=Respuesta;
 507   2          TimeRetryCmd=cte_retry;
 508   2        } 
 509   1      }
 510          //********************************************************************************************************
             -******
 511          //
 512          //********************************************************************************************************
             -******
 513          void AtencComSoft(void)
 514          {
 515   1      
 516   1        char i, longTx;
 517   1        switch (g_cEstadoComSoft)
 518   1        {
 519   2      //********************************************************************************************************
             -******
 520   2          case POLL_COM_SOF:
 521   2      //--------------------------------------------------------------------------------------------------------
             -------
 522   2      //  COLOCAR BUFER DE TRANSMICION INDEPENDIENTE PARA CADA SITUACION
 523   2      //--------------------------------------------------------------------------------------------------------
             -------
 524   2            if (g_cEstadoTxSoft==SIN_LECTURA_TX)
 525   2            {       
 526   3              tx_chr(EOT);                        //No hay Novedad 
 527   3              g_cEstadoComSoft=ESPERA_RX;
 528   3              
 529   3              if (SignalAcceso==1)
 530   3              {
 531   4                buffer_bus[0]=SOLICITA_EVN;
 532   4                tx_bus(1);
 533   4              }   
 534   3              
 535   3            }
 536   2      //--------------------------------------------------------------------------------------------------------
             -------
 537   2            else if ((g_cEstadoTxSoft&LECTURA_COD_TX)==LECTURA_COD_TX)          //Lectura Cod Barras
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 10  

 538   2            {
 539   3                
 540   3              if (Tiquete_Placa==1)
 541   3              {
 542   4                longTx=0;
 543   4                g_scArrTxComSoft[longTx++]=STX;
 544   4                (send_markCashierAut==0)?(g_scArrTxComSoft[longTx++]='a'):(g_scArrTxComSoft[longTx++]='C');
 545   4                
 546   4                for (i=0; i<NumChrTicket; i++)
 547   4                  {
 548   5                  g_scArrTxComSoft[longTx++]=buffer_ticket[i];
 549   5                  }
 550   4                g_scArrTxComSoft[longTx++]=',';
 551   4                if (Tiquete_Salida==1)
 552   4                {
 553   5                  g_scArrTxComSoft[longTx++]=Cod_Dcto;
 554   5                }
 555   4                else
 556   4                {
 557   5                  g_scArrTxComSoft[longTx++]='0';
 558   5                }
 559   4                
 560   4                
 561   4                if (OrigenTipoVeh==CARD)
 562   4                {
 563   5                  if (Tipo_Vehiculo=='H')         // Heavy
 564   5                  {
 565   6                    g_scArrTxComSoft[longTx++]='0';   // Carro=0
 566   6                  }
 567   5                  else if (Tipo_Vehiculo=='T')      // Truck
 568   5                  {
 569   6                    g_scArrTxComSoft[longTx++]='0';   // Carro=0
 570   6                  }
 571   5                  else if(Tipo_Vehiculo=='M')       // Motocycle
 572   5                  {
 573   6                    g_scArrTxComSoft[longTx++]='1';   // Moto=1
 574   6                  }
 575   5                  else if(Tipo_Vehiculo=='C')       // Carro
 576   5                  {
 577   6                    g_scArrTxComSoft[longTx++]='0';   // Carro=0      modifica 24/01/2019    no  funciono
 578   6                  }
 579   5                  else
 580   5                  {
 581   6                    
 582   6                    if (Dif_Mot_Car==1)
 583   6                    {
 584   7                      if (automovil==0)
 585   7                      {
 586   8                        if(SignalAcceso==0)              //  Se modifica 24/01/2019
 587   8                        {
 588   9                        g_scArrTxComSoft[longTx++]='0';       // Carro=0  
 589   9                        }else { g_scArrTxComSoft[longTx++]='1';}    // Moto=1
 590   8                      }    
 591   7                      else
 592   7                      {
 593   8                        g_scArrTxComSoft[longTx++]='1';   // Moto=1
 594   8                      }
 595   7                    }
 596   6                    else
 597   6                    {
 598   7                      g_scArrTxComSoft[longTx++]='0';   // Carro=0     modificado 24/01/2019
 599   7                    }
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 11  

 600   6                    
 601   6                  }
 602   5                }
 603   4                else
 604   4                {
 605   5      
 606   5                    if (Dif_Mot_Car==1)
 607   5                    {
 608   6                      if (automovil==0)
 609   6                      {
 610   7                        if(SignalAcceso==0)              //  Se modifica 24/01/2019
 611   7                        {
 612   8                        g_scArrTxComSoft[longTx++]='0';   // Carro=0  modificado jp 24/01/2019   no funciona
 613   8                        }else { g_scArrTxComSoft[longTx++]='1';}
 614   7                      }
 615   6                      else
 616   6                      {
 617   7                        g_scArrTxComSoft[longTx++]='1';   // Moto=1
 618   7                      }
 619   6                    }
 620   5                    else
 621   5                    {
 622   6                      g_scArrTxComSoft[longTx++]='0';   // Carro=0     modificado jp 24/01/2019 nofunciona
 623   6                    }
 624   5                }
 625   4                
 626   4      
 627   4                g_scArrTxComSoft[longTx++]=',';
 628   4      
 629   4                send_dataCLK((YearIn-0x30),longTx);
 630   4                longTx=longTx+2;
 631   4                send_dataCLK((MonthIn-0x30),longTx);
 632   4                longTx=longTx+2;
 633   4                send_dataCLK((DayIn-0x30),longTx);
 634   4                longTx=longTx+2;
 635   4                send_dataCLK((HourIn-0x30),longTx);
 636   4                longTx=longTx+2;
 637   4                send_dataCLK((MinutIn-0x30),longTx);
 638   4                longTx=longTx+2;
 639   4      
 640   4                
 641   4                if (send_markCashierAut==0)
 642   4                {
 643   5                  g_scArrTxComSoft[longTx++]=',';
 644   5                  if (Tiquete_Salida==1)
 645   5                  {
 646   6        
 647   6                    send_dataCLK((YearOut-0x30),longTx);
 648   6                    longTx=longTx+2;
 649   6                    send_dataCLK((MonthOut-0x30),longTx);
 650   6                    longTx=longTx+2;
 651   6                    send_dataCLK((DayOut-0x30),longTx);
 652   6                    longTx=longTx+2;
 653   6                    send_dataCLK((HourOut-0x30),longTx);
 654   6                    longTx=longTx+2;
 655   6                    send_dataCLK((MinutOut-0x30),longTx);
 656   6                    longTx=longTx+2;
 657   6                    g_scArrTxComSoft[longTx++]=',';
 658   6        
 659   6                    g_scArrTxComSoft[longTx++]=' ';
 660   6        
 661   6                    g_scArrTxComSoft[longTx++]=',';
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 12  

 662   6                    g_scArrTxComSoft[longTx++]=ETX;         
 663   6                    EscribirCadenaSoft(longTx);     
 664   6        
 665   6                  }
 666   5                  else
 667   5                  {
 668   6                    g_scArrTxComSoft[longTx++]='0';
 669   6                    g_scArrTxComSoft[longTx++]='0';
 670   6                    g_scArrTxComSoft[longTx++]='0';
 671   6                    g_scArrTxComSoft[longTx++]='0';
 672   6                    g_scArrTxComSoft[longTx++]='0';
 673   6                    g_scArrTxComSoft[longTx++]='0';
 674   6                    g_scArrTxComSoft[longTx++]='0';
 675   6                    g_scArrTxComSoft[longTx++]='0';
 676   6                    g_scArrTxComSoft[longTx++]='0';
 677   6                    g_scArrTxComSoft[longTx++]='0';
 678   6        
 679   6                    g_scArrTxComSoft[longTx++]=',';
 680   6                    for (i=0; i<Num_Char_LPR; i++)
 681   6                    {
 682   7                      g_scArrTxComSoft[longTx++]=buffer_placa[i];
 683   7                    }
 684   6                    g_scArrTxComSoft[longTx++]=',';
 685   6                    g_scArrTxComSoft[longTx++]=ETX;         
 686   6                    EscribirCadenaSoft(longTx);     
 687   6                  }
 688   5      
 689   5                }
 690   4                else
 691   4                {
 692   5                  g_scArrTxComSoft[longTx++]=ETX;
 693   5                  EscribirCadenaSoft(longTx);
 694   5                }
 695   4          
 696   4      
 697   4              }
 698   3              else
 699   3              {
 700   4                g_scArrTxComSoft[0]=STX;
 701   4                
 702   4                if (Rechazo==0)
 703   4                {
 704   5                  (send_markCashierAut==0)?(g_scArrTxComSoft[1]='A'):(g_scArrTxComSoft[1]='C');
 705   5                }
 706   4                else
 707   4                {
 708   5                  g_scArrTxComSoft[1]=Rechazo;
 709   5                }
 710   4                
 711   4                
 712   4                longTx=len_buffer;
 713   4                for (i=0; i<len_buffer; i++)
 714   4                  {
 715   5                  g_scArrTxComSoft[i+2]=buffer_ticket[i];
 716   5                  }
 717   4                g_scArrTxComSoft[longTx+2]=',';
 718   4        //--------------------------------------------------------------------
 719   4                if (Flag_Dcto==1)
 720   4                {
 721   5                  g_scArrTxComSoft[longTx+3]=Cod_Dcto;
 722   5                }
 723   4                else
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 13  

 724   4                {         
 725   5                  g_scArrTxComSoft[longTx+3]='0';
 726   5                }
 727   4        //-------------------------------------------------------------------------------
 728   4                if (Send_Tipo_Veh==CARD)
 729   4                {
 730   5                  if (Tipo_Vehiculo=='H')         // Heavy
 731   5                  {
 732   6                    xTipo_Vehiculo=4;
 733   6                  }
 734   5                  else if (Tipo_Vehiculo=='T')      // Truck
 735   5                  {
 736   6                    xTipo_Vehiculo=3;
 737   6                  }
 738   5                  else if(Tipo_Vehiculo=='B')         // Bycicle
 739   5                  {
 740   6                    xTipo_Vehiculo=2;
 741   6                  }
 742   5                  else if(Tipo_Vehiculo=='M')       // Motocycle
 743   5                  {
 744   6                    xTipo_Vehiculo=1;
 745   6                  }
 746   5                  else if(Tipo_Vehiculo=='C')       // Carro
 747   5                  {
 748   6                    xTipo_Vehiculo=0;
 749   6                  }
 750   5                  else                  // Sin categoria
 751   5                  {
 752   6        
 753   6                    if (Dif_Mot_Car==1)
 754   6                    {
 755   7                      if (automovil==0)
 756   7                      {
 757   8                        xTipo_Vehiculo=0;     //Carro =0;
 758   8                      }
 759   7                      else
 760   7                      {
 761   8                        xTipo_Vehiculo=1;       //MOTO = 1
 762   8                      }
 763   7                    }
 764   6                    else
 765   6                    {
 766   7                      xTipo_Vehiculo=0;       //Carro =0;
 767   7                    }
 768   6                    
 769   6                  }
 770   5                  g_scArrTxComSoft[longTx+4]=xTipo_Vehiculo+0X30;
 771   5                }
 772   4                else
 773   4                {
 774   5                  if (Dif_Mot_Car==1)
 775   5                  {
 776   6                    if (automovil==0)
 777   6                    {
 778   7                      g_scArrTxComSoft[longTx+4]='0';   //Carro =0;   modificado 23/01/2019 jp
 779   7                    }
 780   6                    else
 781   6                    {
 782   7                      g_scArrTxComSoft[longTx+4]='1';     //MOTO = 1
 783   7                    }
 784   6                  }
 785   5                  else
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 14  

 786   5                  {
 787   6                    g_scArrTxComSoft[longTx+4]='0';   //Carro =0;
 788   6                  }
 789   5                  }
 790   4        //--------------------------------------------------------------------------------          
 791   4                if (send_markCashierAut==1)
 792   4                {
 793   5                  g_scArrTxComSoft[longTx+5]=',';
 794   5        
 795   5                  longTx=longTx+6;
 796   5                  send_dataCLK((YearIn-0x30),longTx);
 797   5                  longTx=longTx+2;
 798   5                  send_dataCLK((MonthIn-0x30),longTx);
 799   5                  longTx=longTx+2;
 800   5                  send_dataCLK((DayIn-0x30),longTx);
 801   5                  longTx=longTx+2;
 802   5                  send_dataCLK((HourIn-0x30),longTx);
 803   5                  longTx=longTx+2;
 804   5                  send_dataCLK((MinutIn-0x30),longTx);
 805   5                  longTx=longTx+2;
 806   5                  g_scArrTxComSoft[longTx]=ETX;
 807   5                  EscribirCadenaSoft(longTx+1);
 808   5        
 809   5        //          g_scArrTxComSoft[longTx+6]=YearIn;    
 810   5        //          g_scArrTxComSoft[longTx+7]=MonthIn;   
 811   5        //          g_scArrTxComSoft[longTx+8]=DayIn;   
 812   5        //          g_scArrTxComSoft[longTx+9]=HourIn;    
 813   5        //          g_scArrTxComSoft[longTx+10]=MinutIn;    
 814   5        //          g_scArrTxComSoft[longTx+11]=ETX;    
 815   5        //            EscribirCadenaSoft(longTx+12);
 816   5           
 817   5                }
 818   4                else
 819   4                {
 820   5                  g_scArrTxComSoft[longTx+5]=ETX;   
 821   5                    EscribirCadenaSoft(longTx+6);
 822   5        
 823   5                }
 824   4              }
 825   3              
 826   3              
 827   3      
 828   3      //        send_markCashierAut=0;
 829   3                g_cEstadoComSoft=ESPERA_RX;
 830   3            }
 831   2      //--------------------------------------------------------------------------------------------------------
             ----------
 832   2            else if ((g_cEstadoTxSoft&LECTURA_WIEG_TX)==LECTURA_WIEG_TX)        // Lectura Wiegand Lector 1
 833   2            {
 834   3                  Send_Wiegand=1;
 835   3                seg=cte_seg;
 836   3                TH0=0X00;                                           
 837   3                TL0=0X00;
 838   3                TF0=0;
 839   3      
 840   3                if (Dato_OffLine==0)
 841   3                 {
 842   4                  if (SalidaW==1)
 843   4                  {
 844   5                    //SalidaW=0;
 845   5      //---------------------;
 846   5      
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 15  

 847   5                  g_scArrTxComSoft[0]=STX;
 848   5                  g_scArrTxComSoft[1]='w';
 849   5                  g_scArrTxComSoft[2]=((buffer_wie[0]>>4)&0X0f)+0X30;
 850   5                  g_scArrTxComSoft[3]=(buffer_wie[0]&0X0F)+0X30;
 851   5                  g_scArrTxComSoft[4]=((buffer_wie[1]>>4)&0X0f)+0X30;
 852   5                  g_scArrTxComSoft[5]=(buffer_wie[1]&0X0f)+0X30;
 853   5                  g_scArrTxComSoft[6]=((buffer_wie[2]>>4)&0X0f)+0X30;
 854   5                  g_scArrTxComSoft[7]=(buffer_wie[2]&0X0f)+0X30;
 855   5        
 856   5                    g_scArrTxComSoft[8]=',';
 857   5                  g_scArrTxComSoft[9]='0';
 858   5        
 859   5      //-------------------------------------------------------------------------------
 860   5                  if (Send_Tipo_Veh==CARD)
 861   5                  {
 862   6                    if (Tipo_Vehiculo=='H')         // Heavy
 863   6                    {
 864   7                      xTipo_Vehiculo=4;
 865   7                    }
 866   6                    else if (Tipo_Vehiculo=='T')      // Truck
 867   6                    {
 868   7                      xTipo_Vehiculo=3;
 869   7                    }
 870   6                    else if(Tipo_Vehiculo=='B')         // Bycicle
 871   6                    {
 872   7                      xTipo_Vehiculo=2;
 873   7                    }
 874   6                    else if(Tipo_Vehiculo=='M')       // Motocycle
 875   6                    {
 876   7                      xTipo_Vehiculo=1;
 877   7                    }
 878   6                    else if(Tipo_Vehiculo=='C')       // Carro
 879   6                    {
 880   7                      xTipo_Vehiculo=0;
 881   7                    }
 882   6                    else                  // Sin categoria
 883   6                    {
 884   7          
 885   7                      if (Dif_Mot_Car==1)
 886   7                      {
 887   8                        if (automovil==0)
 888   8                        {
 889   9                          xTipo_Vehiculo=0;     //Carro =0;   modificado 23/01/2019   no funciona
 890   9                        }
 891   8                        else
 892   8                        {
 893   9                          xTipo_Vehiculo=1;       //MOTO = 1
 894   9                        }
 895   8                      }
 896   7                      else
 897   7                      {
 898   8                        xTipo_Vehiculo=0;       //Carro =0;
 899   8                      }
 900   7                      
 901   7                    }
 902   6                    g_scArrTxComSoft[10]=xTipo_Vehiculo+0X30;
 903   6                  }
 904   5                  else
 905   5                  {
 906   6                    if (Dif_Mot_Car==1)
 907   6                    {
 908   7                      if (automovil==0)
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 16  

 909   7                      {
 910   8                        g_scArrTxComSoft[10]='0';   //Carro =0;   no funcionamodificado 23/01/2019
 911   8                      }
 912   7                      else
 913   7                      {
 914   8                        g_scArrTxComSoft[10]='1';     //MOTO = 1
 915   8                      }
 916   7                    }
 917   6                    else
 918   6                    {
 919   7                      g_scArrTxComSoft[10]='0';     //Carro =0;
 920   7                    }
 921   6                    }
 922   5      //--------------------------------------------------------------------------------  
 923   5                      g_scArrTxComSoft[11]=',';
 924   5                  
 925   5      
 926   5                  send_dataCLK((YearIn-0x30),12);
 927   5                  send_dataCLK((MonthIn-0x30),14);
 928   5                  send_dataCLK((DayIn-0x30),16);
 929   5                  send_dataCLK((HourIn-0x30),18);
 930   5                  send_dataCLK((MinutIn-0x30),20);
 931   5      
 932   5                    
 933   5                    g_scArrTxComSoft[22]=',';
 934   5                  send_dataCLK((YearOut-0x30),23);
 935   5                  send_dataCLK((MonthOut-0x30),25);
 936   5                  send_dataCLK((DayOut-0x30),27);
 937   5                  send_dataCLK((HourOut-0x30),29);
 938   5                  send_dataCLK((MinutOut-0x30),31);
 939   5                  temp=33;
 940   5                  g_scArrTxComSoft[temp++]=',';
 941   5                    
 942   5                    if (Dato_Placa==1)
 943   5                    {
 944   6      //                Dato_Placa=0;
 945   6      //                for (i=0; i<NumDatosPlate-1; i++)
 946   6                      for (i=0; i<NumDatosPlate; i++)
 947   6                      {
 948   7                        g_scArrTxComSoft[temp++]=buffer_placa[i];
 949   7                      }
 950   6                      }
 951   5                    else
 952   5                    {
 953   6                        g_scArrTxComSoft[temp++]=' ';
 954   6                    }
 955   5                    g_scArrTxComSoft[temp++]=',';
 956   5                    g_scArrTxComSoft[temp++]=ETX;
 957   5                    EscribirCadenaSoft(temp);
 958   5      
 959   5      
 960   5      
 961   5      
 962   5      //---------------------
 963   5                  }
 964   4                  else
 965   4                  {
 966   5                    g_scArrTxComSoft[0]=STX;
 967   5                    g_scArrTxComSoft[1]='B';
 968   5                    g_scArrTxComSoft[2]=((buffer_wie[0]>>4)&0X0f)+0X30;
 969   5                    g_scArrTxComSoft[3]=(buffer_wie[0]&0X0F)+0X30;
 970   5                    g_scArrTxComSoft[4]=((buffer_wie[1]>>4)&0X0f)+0X30;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 17  

 971   5                    g_scArrTxComSoft[5]=(buffer_wie[1]&0X0f)+0X30;
 972   5                    g_scArrTxComSoft[6]=((buffer_wie[2]>>4)&0X0f)+0X30;
 973   5                    g_scArrTxComSoft[7]=(buffer_wie[2]&0X0f)+0X30;
 974   5          
 975   5                      g_scArrTxComSoft[8]=',';
 976   5                    g_scArrTxComSoft[9]='0';
 977   5          
 978   5                    if (Dif_Mot_Car==1)
 979   5                    {
 980   6                      if (automovil==0)
 981   6                      {
 982   7                        g_scArrTxComSoft[10]='0';   //Carro =0;
 983   7                      }
 984   6                      else
 985   6                      {
 986   7                        g_scArrTxComSoft[10]='1';     //MOTO = 1
 987   7                      }
 988   6                    }
 989   5                    else
 990   5                    {
 991   6                      g_scArrTxComSoft[10]='0';     //Carro =0;
 992   6                    }
 993   5          
 994   5                    g_scArrTxComSoft[11]=ETX;
 995   5                    EscribirCadenaSoft(12);
 996   5      
 997   5                  }
 998   4                  
 999   4      
1000   4      
1001   4                }
1002   3                else
1003   3                {
1004   4      
1005   4                  g_scArrTxComSoft[0]=STX;
1006   4                  g_scArrTxComSoft[1]='w';
1007   4                  g_scArrTxComSoft[2]=((buffer_wie[0]>>4)&0X0f)+0X30;
1008   4                  g_scArrTxComSoft[3]=(buffer_wie[0]&0X0F)+0X30;
1009   4                  g_scArrTxComSoft[4]=((buffer_wie[1]>>4)&0X0f)+0X30;
1010   4                  g_scArrTxComSoft[5]=(buffer_wie[1]&0X0f)+0X30;
1011   4                  g_scArrTxComSoft[6]=((buffer_wie[2]>>4)&0X0f)+0X30;
1012   4                  g_scArrTxComSoft[7]=(buffer_wie[2]&0X0f)+0X30;
1013   4        
1014   4                    g_scArrTxComSoft[8]=',';
1015   4                  g_scArrTxComSoft[9]='0';
1016   4        
1017   4      //-------------------------------------------------------------------------------
1018   4                  if (Send_Tipo_Veh==CARD)
1019   4                  {
1020   5                    if (Tipo_Vehiculo=='H')         // Heavy
1021   5                    {
1022   6                      xTipo_Vehiculo=4;
1023   6                    }
1024   5                    else if (Tipo_Vehiculo=='T')      // Truck
1025   5                    {
1026   6                      xTipo_Vehiculo=3;
1027   6                    }
1028   5                    else if(Tipo_Vehiculo=='B')         // Bycicle
1029   5                    {
1030   6                      xTipo_Vehiculo=2;
1031   6                    }
1032   5                    else if(Tipo_Vehiculo=='M')       // Motocycle
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 18  

1033   5                    {
1034   6                      xTipo_Vehiculo=1;
1035   6                    }
1036   5                    else if(Tipo_Vehiculo=='C')       // Carro
1037   5                    {
1038   6                      xTipo_Vehiculo=0;
1039   6                    }
1040   5                    else                  // Sin categoria
1041   5                    {
1042   6          
1043   6                      if (Dif_Mot_Car==1)
1044   6                      {
1045   7                        if (automovil==0)
1046   7                        {
1047   8                          xTipo_Vehiculo=0;     //Carro =0;      no funciona modificado 23/01/2019
1048   8                        }
1049   7                        else
1050   7                        {
1051   8                          xTipo_Vehiculo=1;       //MOTO = 1
1052   8                        }
1053   7                      }
1054   6                      else
1055   6                      {
1056   7                        xTipo_Vehiculo=0;       //Carro =0;
1057   7                      }
1058   6                      
1059   6                    }
1060   5                    g_scArrTxComSoft[10]=xTipo_Vehiculo+0X30;
1061   5                  }
1062   4                  else
1063   4                  {
1064   5                    if (Dif_Mot_Car==1)
1065   5                    {
1066   6                      if (automovil==0)
1067   6                      {
1068   7                        g_scArrTxComSoft[10]='0';   //Carro =0;   no funcionamodificado 23/01/2019
1069   7                      }
1070   6                      else
1071   6                      {
1072   7                        g_scArrTxComSoft[10]='1';     //MOTO = 1
1073   7                      }
1074   6                    }
1075   5                    else
1076   5                    {
1077   6                      g_scArrTxComSoft[10]='0';     //Carro =0;
1078   6                    }
1079   5                    }
1080   4      //--------------------------------------------------------------------------------  
1081   4                      g_scArrTxComSoft[11]=',';
1082   4                  
1083   4      
1084   4                  send_dataCLK((YearIn-0x30),12);
1085   4                  send_dataCLK((MonthIn-0x30),14);
1086   4                  send_dataCLK((DayIn-0x30),16);
1087   4                  send_dataCLK((HourIn-0x30),18);
1088   4                  send_dataCLK((MinutIn-0x30),20);
1089   4      
1090   4                  if (Off_Line_Salida==1)
1091   4                  {
1092   5                    
1093   5                      g_scArrTxComSoft[22]=',';
1094   5                    send_dataCLK((YearOut-0x30),23);
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 19  

1095   5                    send_dataCLK((MonthOut-0x30),25);
1096   5                    send_dataCLK((DayOut-0x30),27);
1097   5                    send_dataCLK((HourOut-0x30),29);
1098   5                    send_dataCLK((MinutOut-0x30),31);
1099   5                    temp=33;
1100   5                    g_scArrTxComSoft[temp++]=',';
1101   5                    
1102   5                    if (Dato_Placa==1)
1103   5                    {
1104   6      //                Dato_Placa=0;
1105   6      //                for (i=0; i<NumDatosPlate-1; i++)
1106   6                      for (i=0; i<NumDatosPlate; i++)
1107   6                      {
1108   7                        g_scArrTxComSoft[temp++]=buffer_placa[i];
1109   7                      }
1110   6                      g_scArrTxComSoft[temp++]=',';
1111   6                      g_scArrTxComSoft[temp++]=ETX;
1112   6                      EscribirCadenaSoft(temp);
1113   6      
1114   6                    }
1115   5                    else
1116   5                    {
1117   6                        g_scArrTxComSoft[temp++]=' ';
1118   6                      g_scArrTxComSoft[temp++]=',';
1119   6                        g_scArrTxComSoft[temp++]=ETX;
1120   6                      EscribirCadenaSoft(temp);
1121   6                    }
1122   5      
1123   5      //              g_scArrTxComSoft[33]=ETX;
1124   5      //              EscribirCadenaSoft(34);
1125   5                  }
1126   4                  else
1127   4                  {
1128   5                      g_scArrTxComSoft[22]=',';
1129   5                    send_dataCLK((0),23);
1130   5                    send_dataCLK((0),25);
1131   5                    send_dataCLK((0),27);
1132   5                    send_dataCLK((0),29);
1133   5                    send_dataCLK((0),31);
1134   5      
1135   5                    temp=33;
1136   5                    g_scArrTxComSoft[temp++]=',';
1137   5                    
1138   5                    if (Dato_Placa==1)
1139   5                    {
1140   6                      Dato_Placa=0;
1141   6                      for (i=0; i<NumDatosPlate-1; i++)
1142   6                      {
1143   7                        g_scArrTxComSoft[temp++]=buffer_placa[i];
1144   7                      }
1145   6                      g_scArrTxComSoft[temp++]=',';
1146   6                      g_scArrTxComSoft[temp++]=ETX;
1147   6                      EscribirCadenaSoft(temp);
1148   6                    }
1149   5                    else
1150   5                    {
1151   6                        g_scArrTxComSoft[temp++]=' ';
1152   6                      g_scArrTxComSoft[temp++]=',';
1153   6                        g_scArrTxComSoft[temp++]=ETX;
1154   6                      EscribirCadenaSoft(temp);
1155   6                    }
1156   5      
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 20  

1157   5      //              g_scArrTxComSoft[33]=ETX;
1158   5      //              EscribirCadenaSoft(34);
1159   5      
1160   5                  }
1161   4      
1162   4                }
1163   3      
1164   3      //          g_cEstadoTxSoft &=~LECTURA_WIEG_TX;
1165   3      //jp          byte_wie=0x00000000;
1166   3      //          nbitsW=0;
1167   3                g_cEstadoComSoft=ESPERA_RX;
1168   3            }
1169   2      //--------------------------------------------------------------------------------------------------------
             ----------      
1170   2              else if ((g_cEstadoTxSoft&COD_PRINT_TX)==COD_PRINT_TX)            // Envia Ticket/Impresora
1171   2            {
1172   3              g_cEstadoTxSoft &=~COD_PRINT_TX;
1173   3              g_cEstadoComSoft=ESPERA_RX;
1174   3            } 
1175   2      //--------------------------------------------------------------------------------------------------------
             ----------
1176   2          break;
1177   2      //********************************************************************************************************
             -*********
1178   2      //********************************************************************************************************
             -*********
1179   2          case ANALICE_STR_SOF:                                //ANALIZA DATOS RECIBIDOS
1180   2      
1181   2                if (SerieOK==1)
1182   2              {
1183   3                SerieOK=0;
1184   3                for (i=0; i<g_cContByteRx; i++)
1185   3                {
1186   4                  buffer_bus[i]=g_scArrDisplay[i];
1187   4                }
1188   3                tx_bus(g_cContByteRx);
1189   3                txACK=1;
1190   3                g_cEstadoComSoft=ESPERA_RX;
1191   3              }                                       
1192   2      //--------------------------------------------------------------------------------------------------------
             --------
1193   2      //        else if((g_cContByteRx==25)&&(g_scArrRxComSoft[1]==g_cDirBoard)&&(g_scArrRxComSoft[2]=='H'))  //H: HO
             -RA DEL SISTEMA
1194   2              else if((g_cContByteRx==25)&&(g_scArrDisplay[1]==g_cDirBoard)&&(g_scArrDisplay[2]=='H'))    //H: HORA DE
             -L SISTEMA
1195   2              { 
1196   3                  prg_disp();
1197   3                  for (i=0; i<g_cContByteRx; i++)
1198   3                  {
1199   4                    buffer_bus[i]=g_scArrDisplay[i];
1200   4                  }
1201   3                  tx_bus(g_cContByteRx);              //TRANFIERE HORA AL SECUNDARIO
1202   3                
1203   3                  cont(0x80);
1204   3                  vdato('S');
1205   3                  vdato('Y');
1206   3                  vdato('N');
1207   3                  vdato('C');
1208   3                  txACK=1;
1209   3                  g_cEstadoComSoft=ESPERA_RX;
1210   3      
1211   3              }
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 21  

1212   2              else if(g_cContByteRx>=0x06)            //Area de Actuadores
1213   2              {
1214   3                /*envia los cupos al segundario*/
1215   3                if(g_cContByteRx>=0x07)               // modificado jp cmd del num de cupos disponibles
1216   3                 {  
1217   4                  if(g_scArrRxComSoft[1]=='c')      // valido el cmd de cupos q es 'c'
1218   4                  {
1219   5                    
1220   5                  tx_bus(g_cContByteRx);
1221   5                /*
1222   5                    cont(0x80);                         //se envia inf al lcd para pruebas
1223   5                    buffer_Cupo[4]='\0';
1224   5                   lcd_text(0,0,(unsigned char *)  buffer_Cupo);
1225   5                    */
1226   5                    txACK=1;
1227   5                    g_cEstadoComSoft=ESPERA_RX;
1228   5                  }
1229   4                }
1230   3                
1231   3                if(g_scArrRxComSoft[1]=='D')
1232   3                {
1233   4      
1234   4                }
1235   3                else if(g_scArrRxComSoft[1]=='A')
1236   3                {
1237   4      //            lock1=1;
1238   4      //            seg=cte_seg;
1239   4      //            TH0=0X00;                                           
1240   4      //            TL0=0X00;
1241   4      //            TF0=0;        
1242   4                }
1243   3                if(g_scArrRxComSoft[2]=='D')
1244   3                {
1245   4      
1246   4                }
1247   3                else if(g_scArrRxComSoft[2]=='A')
1248   3                {
1249   4                  if (notifyEVP==1)
1250   4                  {
1251   5                    if (InhabilitaPulsoEvPOut==1)
1252   5                    {
1253   6                      if ((Send_Wiegand==1))
1254   6                      {
1255   7                        if (SalidaW==0)
1256   7                        {
1257   8                          lock2=1;            // Alvaro Manda Abrir mensual y tiquete pero notifico
1258   8                          seg=cte_seg+14;
1259   8                          TH0=0X00;           //Inicializa timer                    *           
1260   8                          TL0=0X00;
1261   8                          TF0=0;
1262   8                        }
1263   7                      }
1264   6                    }
1265   5                    else
1266   5                    {
1267   6                      if (SalidaW==0)
1268   6                      {
1269   7                        lock2=1;              // Alvaro Manda Abrir mensual y tiquete pero notifico
1270   7                        seg=cte_seg+14;
1271   7                        TH0=0X00;             //Inicializa timer                    *           
1272   7                        TL0=0X00;
1273   7                        TF0=0;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 22  

1274   7                        }
1275   6                    }
1276   5      
1277   5                  }
1278   4                }
1279   3      //--------------------------------------------------------------------------------------------------------
             --------------------*
1280   3                if (bandera_rx_soft==1)                 //(g_cContByteRx>0x06)                          //Area de Mensajes L1       
1281   3                {
1282   4                  bandera_rx_soft=0;
1283   4      
1284   4                  if ((g_scArrDisplay[5]=='A')&&(g_scArrDisplay[6]=='C')&&(g_scArrDisplay[7]=='E')&&(g_scArrDisplay[8]
             -=='R')&&(g_scArrDisplay[9]=='Q')&&(g_scArrDisplay[10]=='U')&&(g_scArrDisplay[11]=='E')&&(g_scArrDisplay[12]=='S')&&(g_sc
             -ArrDisplay[13]=='E'))
1285   4                  {
1286   5                    SendRtaBus(0xa1);
1287   5                  }
1288   4                    else if ((g_scArrDisplay[5]=='U')&&(g_scArrDisplay[6]=='N')&&(g_scArrDisplay[7]==' ')&&(g_scArrDi
             -splay[8]=='M'))
1289   4                  {
1290   5                    SendRtaBus(UN_MOMENTO);
1291   5                    
1292   5                    g_cEstadoTxSoft &=~LECTURA_COD_TX;
1293   5                    g_cEstadoTxSoft &=~LECTURA_WIEG_TX;
1294   5                    Dato_Placa=0;
1295   5      
1296   5                    Tiquete_Placa=0;
1297   5                    Tiquete_Salida=0;
1298   5                    send_markCashierAut=0;
1299   5      
1300   5                    Rechazo=0;
1301   5                    TimeOut_Codigo=0;
1302   5                    TimeOut_Wiegand=0;
1303   5                    SalidaW=0;
1304   5                    Tipo_Vehiculo=' ';
1305   5                    
1306   5                  }
1307   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='A')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='G')&&(g_scArrDisplay[6]=='R')&&(g_scArrDisplay[7]=='A')&&(g_scArrDisplay[8]=='C')&&
             -(g_scArrDisplay[9]=='I')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='S'))
1308   4                  {
1309   5                    SendMsg(GRACIAS);
1310   5                    }
1311   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='B')&&(g_scArrDisplay[6]=='I')&&(g_scArrDisplay[7]=='E')&&(g_scArrDisplay[8]=='N')&&
             -(g_scArrDisplay[9]=='V')&&(g_scArrDisplay[10]=='E')&&(g_scArrDisplay[11]=='N')&&(g_scArrDisplay[12]=='I')&&(g_scArrDispl
             -ay[13]=='D')&&(g_scArrDisplay[14]=='O'))
1312   4                  {
1313   5                    SendMsg(BIENVENIDO);
1314   5                  }
1315   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='M')&&(g_scArrDisplay[6]=='E')&&(g_scArrDisplay[7]=='N')&&(g_scArrDisplay[8]=='S')&&
             -(g_scArrDisplay[9]=='U')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='L')&&(g_scArrDisplay[12]==' ')&&(g_scArrDispl
             -ay[13]=='N')&&(g_scArrDisplay[14]=='O')&&(g_scArrDisplay[15]==' ')&&(g_scArrDisplay[16]=='E')&&(g_scArrDisplay[17]=='S')
             -&&(g_scArrDisplay[18]=='T')&&(g_scArrDisplay[19]=='A'))
1316   4                  {
1317   5                    SendRtaBus(NO_IN_PARK);
1318   5                  }
1319   4      
1320   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='M')&&(g_scArrDisplay[6]=='E')&&(g_scArrDisplay[7]=='N')&&(g_scArrDisplay[8]=='S')&&
             -(g_scArrDisplay[9]=='U')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='L')&&(g_scArrDisplay[12]==' ')&&(g_scArrDispl
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 23  

             -ay[13]=='Y')&&(g_scArrDisplay[14]=='A')&&(g_scArrDisplay[15]==' ')&&(g_scArrDisplay[16]=='E')&&(g_scArrDisplay[17]=='S')
             -&&(g_scArrDisplay[18]=='T')&&(g_scArrDisplay[19]=='A'))
1321   4                  {
1322   5                    SendRtaBus(IN_PARK);
1323   5                  }
1324   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='M')&&(g_scArrDisplay[6]=='E')&&(g_scArrDisplay[7]=='N')&&(g_scArrDisplay[8]=='S')&&
             -(g_scArrDisplay[9]=='U')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='L')&&(g_scArrDisplay[12]==' ')&&(g_scArrDispl
             -ay[13]=='F')&&(g_scArrDisplay[14]=='U')&&(g_scArrDisplay[15]=='E')&&(g_scArrDisplay[16]=='R')&&(g_scArrDisplay[17]=='A')
             -&&(g_scArrDisplay[18]==' ')&&(g_scArrDisplay[19]=='D')&&(g_scArrDisplay[20]=='E')&&(g_scArrDisplay[21]=='R'))
1325   4                  {
1326   5                    SendRtaBus(EXPIRO);
1327   5                  }
1328   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='M')&&(g_scArrDisplay[6]=='E')&&(g_scArrDisplay[7]=='N')&&(g_scArrDisplay[8]=='S')&&
             -(g_scArrDisplay[9]=='U')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='L')&&(g_scArrDisplay[12]==' ')&&(g_scArrDispl
             -ay[13]=='F')&&(g_scArrDisplay[14]=='U')&&(g_scArrDisplay[15]=='E')&&(g_scArrDisplay[16]=='R')&&(g_scArrDisplay[17]=='A')
             -&&(g_scArrDisplay[18]==' ')&&(g_scArrDisplay[19]=='D')&&(g_scArrDisplay[20]=='E')&&(g_scArrDisplay[21]=='H'))
1329   4                  {
1330   5                    SendRtaBus(HORARIO);
1331   5                  }
1332   4                  else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDispl
             -ay[4]=='X')&&(g_scArrDisplay[5]=='N')&&(g_scArrDisplay[6]=='O')&&(g_scArrDisplay[7]==' ')&&(g_scArrDisplay[8]=='E')&&(g_
             -scArrDisplay[9]=='S')&&(g_scArrDisplay[10]==' ')&&(g_scArrDisplay[11]=='M')&&(g_scArrDisplay[12]=='E')&&(g_scArrDisplay[
             -13]=='N')&&(g_scArrDisplay[14]=='S'))
1333   4                  {
1334   5                    SendRtaBus(NO_MENSUAL);
1335   5                              
1336   5                  }
1337   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='N')&&(g_scArrDisplay[6]=='O')&&(g_scArrDisplay[7]==' ')&&(g_scArrDisplay[8]=='R')&&
             -(g_scArrDisplay[9]=='E')&&(g_scArrDisplay[10]=='G')&&(g_scArrDisplay[11]=='I')&&(g_scArrDisplay[12]=='S')&&(g_scArrDispl
             -ay[13]=='T')&&(g_scArrDisplay[14]=='R'))
1338   4                  {
1339   5                    SendRtaBus(NO_REGIST);
1340   5      
1341   5                  }
1342   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDi
             -splay[4]=='X')&&(g_scArrDisplay[5]=='L')&&(g_scArrDisplay[6]=='O')&&(g_scArrDisplay[7]=='T')&&(g_scArrDisplay[8]=='E')&&
             -(g_scArrDisplay[9]==' ')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='S')&&(g_scArrDisplay[12]=='I')&&(g_scArrDispl
             -ay[13]=='G')&&(g_scArrDisplay[14]=='N'))
1343   4                  {
1344   5                    SendRtaBus(LOT_FULL);
1345   5                  }
1346   4                  //
1347   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDisp
             -lay[4]=='X')&&(g_scArrDisplay[5]=='M')&&(g_scArrDisplay[6]=='E')&&(g_scArrDisplay[7]=='N')&&(g_scArrDisplay[8]=='S')&&(g
             -_scArrDisplay[9]=='U')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='L')&&(g_scArrDisplay[12]==' ')&&(g_scArrDisplay
             -[13]=='E')&&(g_scArrDisplay[14]=='X')&&(g_scArrDisplay[15]=='C')&&(g_scArrDisplay[16]=='E')&&(g_scArrDisplay[17]=='D')&&
             -(g_scArrDisplay[18]=='E'))
1348   4                  {
1349   5                    SendRtaBus(EXCEDE_HORARIO);
1350   5                  }
1351   4                    else if ((g_scArrDisplay[1]=='X')&&(g_scArrDisplay[2]=='X')&&(g_scArrDisplay[3]=='X')&&(g_scArrDisp
             -lay[4]=='X')&&(g_scArrDisplay[5]=='M')&&(g_scArrDisplay[6]=='E')&&(g_scArrDisplay[7]=='N')&&(g_scArrDisplay[8]=='S')&&(g
             -_scArrDisplay[9]=='U')&&(g_scArrDisplay[10]=='A')&&(g_scArrDisplay[11]=='L')&&(g_scArrDisplay[12]==' ')&&(g_scArrDisplay
             -[13]=='N')&&(g_scArrDisplay[14]=='O')&&(g_scArrDisplay[15]==' ')&&(g_scArrDisplay[16]=='P')&&(g_scArrDisplay[17]=='A')&&
             -(g_scArrDisplay[18]=='G'))
1352   4                  {
1353   5                    SendRtaBus(MENSUAL_NO_PAGO);
1354   5                  }
1355   4      //--------------------------------------------------------------------------------------------------------
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 24  

             ------------------
1356   4                  cont(0x80);
1357   4                  for(i=5;(i<21)&&(g_scArrDisplay[i]!=ETX);i++)     /*msj en el display ejemplo (PARQUEADERO)*/
1358   4                  {
1359   5                    vdato(g_scArrDisplay[i]);
1360   5                  }
1361   4                  cont(0xc0);
1362   4                  for(i=21;(i<=38)&&(g_scArrDisplay[i]!=ETX);i++)
1363   4                  {
1364   5                      if (msg_error==0)
1365   5                    {
1366   6                      vdato(g_scArrDisplay[i]);                     /*hora del sistema*/
1367   6                    }
1368   5                  }
1369   4      
1370   4                } //if(g_cContByteRx>0x06)       
1371   3      
1372   3      
1373   3              }
1374   2      //--------------------------------------------------------------------------------------------------------
             ------------------
1375   2              g_cEstadoComSoft=ESPERA_RX;
1376   2              txACK=1;
1377   2            
1378   2          break;
1379   2      //--------------------------------------------------------------------------------------------------------
             ----
1380   2          default:
1381   2            g_cEstadoComSoft=ESPERA_RX;
1382   2          break;
1383   2        
1384   2        }
1385   1      } 
1386          
1387          //*******************************************************************************************
1388          //
1389          //  Main C function that start the interrupt-driven serial I/O.
1390          //
1391          //*******************************************************************************************
1392          void main (void) 
1393          {
1394   1      
1395   1       unsigned char MSGnotify    []= "COMPARACION:    " ;
1396   1       unsigned char msgdir       []= "   Addr:        " ;
1397   1       unsigned char sin_resp     []= " SIN RESPUESTA  " ; 
1398   1       unsigned char resp_NACK    []= " PLACA NO IGUAL " ; 
1399   1       unsigned char SendCode   []= " ENVIANDO DATOS " ; 
1400   1      
1401   1       unsigned char k,i,NumDatValidar;
1402   1       unsigned char PosComa[2];
1403   1       unsigned char temp;
1404   1      
1405   1      //******************************************************************************************* 
1406   1        com_initialize ();                  // Initialize interrupt driven serial I/O       *
1407   1        inicia_wiegand();                 // Inicia wiegand lectrua a 26 complemnto a uno, lectura a 33, 27 lectura a 26 
             -sin complemeto
1408   1       //   EA = 1;                             // Enable global interrupts             *
1409   1        prg_disp();
1410   1      //******************************************************************************************* 
1411   1        TMOD=(TMOD & 0xf0) | 0x01;      //  Coloca el temporizador 0 y 1 en modo 1.  16bITS *
1412   1        TF0=0;                //  Bandera de Timer                *
1413   1        TH0=0X00;             //                          *           
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 25  

1414   1        TL0=0X00;             //                          *
1415   1        TR0=1;                // Run TM2                      *
1416   1      //******************************************************************************************* 
1417   1        lock1=0;              // Relevo                     *
1418   1        lock2=0;
1419   1        ledv=0;                 // Led Pulsador                   *
1420   1        bus_clk=1;
1421   1      //******************************************************************************************* 
1422   1      //  INICIALIZACIONES
1423   1      //*******************************************************************************************
1424   1      
1425   1      
1426   1        toggle=1;
1427   1        TimeOut_Codigo=0;
1428   1        TimeOut_Wiegand=0;
1429   1        TimeOutLinea=TIMEW;
1430   1        seg=cte_seg;
1431   1        retry=0;
1432   1      
1433   1        msg1=0;
1434   1        audio1=0;
1435   1      
1436   1        msg2=0;
1437   1        audio2=0;
1438   1      
1439   1        msg3=0;
1440   1        audio3=0;
1441   1      
1442   1        msg4=0;
1443   1        audio4=0;
1444   1      
1445   1        send_markCashierAut=0;
1446   1        Rechazo=0;
1447   1        Dato_OffLine=0;
1448   1        Tiquete_Placa=0;
1449   1        Tiquete_Salida=0;
1450   1        TimeRetryCmd=0;
1451   1        TimeOut_Send_Acceso=0;
1452   1        Tx_Acceso=0;
1453   1        iTimeEsperaRtaLPR=0;
1454   1        RetryCmd=0;
1455   1      //*******************************************************************************************
1456   1      //  PROGRAMACIONES
1457   1      //*******************************************************************************************
1458   1        ACCESO_USE_LPR=0;                   // 0 = Envia a Evp   1 = Envia al secundario LPR para Decision de Acceso
1459   1        notifyEVP=1;
1460   1        Dif_Mot_Car=1;
1461   1        OrigenTipoVeh=CARD;                 // CARD - LOOP
1462   1      
1463   1      
1464   1        InhabilitaPulsoEvPOut=1;                // Mifare Inhabilta Pulso de Evp...
1465   1                                  // Ticket NO debe Inhabilitar
1466   1        Send_Tipo_Veh=CARD;                 // CARD o LOOP
1467   1        OpenMensual_Apx=0;                  // 
1468   1        Central_ID_OFFLINE=0;
1469   1      //*******************************************************************************************
1470   1      
1471   1        lcd_text(0,0,(unsigned char *) " AccesScan v4.5 ");
1472   1      
1473   1        cont(0xc0);
1474   1        lcd_puts(msgdir);             /*jp se muestra la direccion*/
1475   1        ve_dir();
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 26  

1476   1      //------------------------------------------------------------------------------------------*
1477   1        busy=1;
1478   1        bus_clk=1;
1479   1        if (automovil==1)
1480   1        {
1481   2          
1482   2        }
1483   1      //*******************************************************************************************
1484   1        while (1)
1485   1         {
1486   2      
1487   2            P2=0xff;
1488   2          temp=P2;
1489   2        
1490   2          if((completo == 1) &&(SignalAcceso==0))
1491   2          {
1492   3          
1493   3            if (Habilita_Lectura==1)
1494   3            {
1495   4              TimeOutLinea=TIMEW;             /*tengo el dato wiegand en el orden de access*/
1496   4                id_Access();                  /*tengo el dato en buffer_wie*/
1497   4              
1498   4              limpia_data();                /*limpio los datos*/        
1499   4                
1500   4              if ((ACCESO_USE_LPR==1))
1501   4              {
1502   5          
1503   5                if (iTimeEsperaRtaLPR==0)         /*envio trama para ser transmitida por tcp/ip*/
1504   5                {
1505   6                buffer_bus[0]=STX;
1506   6                buffer_bus[1]='W';
1507   6                buffer_bus[2]=buffer_wie[0];
1508   6                buffer_bus[3]=buffer_wie[1];
1509   6                buffer_bus[4]=buffer_wie[2];
1510   6                buffer_bus[5]=ETX;
1511   6        
1512   6                buffer_wieLPR[0]=buffer_wie[0];
1513   6                buffer_wieLPR[1]=buffer_wie[1];
1514   6                buffer_wieLPR[2]=buffer_wie[2];
1515   6        
1516   6                g_cContByteRx=6;
1517   6                tx_bus(g_cContByteRx);                  /*transmito al pto paralelo*/
1518   6                g_cEstadoTxSoft &=~LECTURA_WIEG_TX;     // Si usa LPR no envia al software. LPR agrega el registro y da
             - Acceso
1519   6                iTimeEsperaRtaLPR=cte_seg*20;
1520   6                }
1521   5                else
1522   5                {
1523   6                g_cEstadoTxSoft &=~LECTURA_WIEG_TX;     // Si usa LPR no envia al software. LPR agrega el registro y da
             - Acceso
1524   6                }
1525   5                
1526   5              }
1527   4              else
1528   4              {
1529   5              buffer_bus[0]=STX;
1530   5              buffer_bus[1]='W';
1531   5              buffer_bus[2]=buffer_wie[0];
1532   5              buffer_bus[3]=buffer_wie[1];
1533   5              buffer_bus[4]=buffer_wie[2];
1534   5              buffer_bus[5]=ETX;
1535   5              g_cContByteRx=6;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 27  

1536   5              tx_bus(g_cContByteRx);
1537   5              g_cEstadoTxSoft=LECTURA_WIEG_TX;
1538   5              SalidaW=0;
1539   5              TimeOut_Wiegand=5;
1540   5                g_cEstadoComSoft=POLL_COM_SOF;
1541   5                AtencComSoft();
1542   5              }
1543   4      
1544   4            } 
1545   3            else
1546   3            {
1547   4              lcd_text(1,0,(unsigned char *) "INHABILITADA... ");
1548   4              g_cEstadoTxSoft &=~LECTURA_WIEG_TX;
1549   4            }
1550   3      
1551   3      
1552   3              if (Central_ID_OFFLINE==1)
1553   3              {
1554   4                if (((buffer_wie[0]==0x76)&&(buffer_wie[1]==0xd6)&&(buffer_wie[2]==0x0b))||((buffer_wie[0]==0x24)&&(b
             -uffer_wie[1]==0x54)&&(buffer_wie[2]==0xe4))||((buffer_wie[0]==0x95)&&(buffer_wie[1]==0x00)&&(buffer_wie[2]==0xd5))||((bu
             -ffer_wie[0]==0x5F)&&(buffer_wie[1]==0xd7)&&(buffer_wie[2]==0x84)))
1555   4                {
1556   5                  lock1=1;
1557   5                  lock2=1;
1558   5                  seg=cte_seg+14;
1559   5                  TH0=0X00;           //Inicializa timer                    *           
1560   5                  TL0=0X00;
1561   5                  TF0=0;
1562   5                }
1563   4                else if (((buffer_wie[0]==0x95)&&(buffer_wie[1]==0x00)&&(buffer_wie[2]==0xf2))||((buffer_wie[0]==0x60
             -)&&(buffer_wie[1]==0x40)&&(buffer_wie[2]==0x94))||((buffer_wie[0]==0x95)&&(buffer_wie[1]==0x00)&&(buffer_wie[2]==0xf3))|
             -|((buffer_wie[0]==0x37)&&(buffer_wie[1]==0x36)&&(buffer_wie[2]==0x24)))
1564   4                {
1565   5                  lock1=1;
1566   5                  lock2=1;
1567   5                  seg=cte_seg+14;
1568   5                  TH0=0X00;           //Inicializa timer                    *           
1569   5                  TL0=0X00;
1570   5                  TF0=0;
1571   5                }
1572   4                else if (((buffer_wie[0]==0x95)&&(buffer_wie[1]==0x01)&&(buffer_wie[2]==0x10))||((buffer_wie[0]==0x7f
             -)&&(buffer_wie[1]==0x75)&&(buffer_wie[2]==0x44))||((buffer_wie[0]==0x95)&&(buffer_wie[1]==0x01)&&(buffer_wie[2]==0x11))|
             -|((buffer_wie[0]==0x17)&&(buffer_wie[1]==0xee)&&(buffer_wie[2]==0x24)))
1573   4                {
1574   5                  lock1=1;
1575   5                  lock2=1;
1576   5                  seg=cte_seg+14;
1577   5                  TH0=0X00;           //Inicializa timer                    *           
1578   5                  TL0=0X00;
1579   5                  TF0=0;
1580   5                }
1581   4                else if (((buffer_wie[0]==0x95)&&(buffer_wie[1]==0x4f)&&(buffer_wie[2]==0xd7))||((buffer_wie[0]==0x67
             -)&&(buffer_wie[1]==0x17)&&(buffer_wie[2]==0xb4))||((buffer_wie[0]==0x94)&&(buffer_wie[1]==0xea)&&(buffer_wie[2]==0x75))|
             -|((buffer_wie[0]==0x7c)&&(buffer_wie[1]==0xde)&&(buffer_wie[2]==0x34)))
1582   4                {
1583   5                  lock1=1;
1584   5                  lock2=1;
1585   5                  seg=cte_seg+14;
1586   5                  TH0=0X00;           //Inicializa timer                    *           
1587   5                  TL0=0X00;
1588   5                  TF0=0;
1589   5                }
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 28  

1590   4                else if (((buffer_wie[0]==0x94)&&(buffer_wie[1]==0xeb)&&(buffer_wie[2]==0x58))||((buffer_wie[0]==0x17
             -)&&(buffer_wie[1]==0x16)&&(buffer_wie[2]==0xd4))||((buffer_wie[0]==0x8f)&&(buffer_wie[1]==0x42)&&(buffer_wie[2]==0xd6)))
1591   4                {
1592   5                  lock1=1;
1593   5                  lock2=1;
1594   5                  seg=cte_seg+14;
1595   5                  TH0=0X00;           //Inicializa timer                    *           
1596   5                  TL0=0X00;
1597   5                  TF0=0;
1598   5                }
1599   4                else if (((buffer_wie[0]==0x95)&&(buffer_wie[1]==0x1d)&&(buffer_wie[2]==0xbc))||((buffer_wie[0]==0x26
             -)&&(buffer_wie[1]==0x12)&&(buffer_wie[2]==0x84)))
1600   4                {
1601   5                  lock1=1;
1602   5                  lock2=1;
1603   5                  seg=cte_seg+14;
1604   5                  TH0=0X00;           //Inicializa timer                    *           
1605   5                  TL0=0X00;
1606   5                  TF0=0;
1607   5                }
1608   4                else if (((buffer_wie[0]==0x82)&&(buffer_wie[1]==0x88)&&(buffer_wie[2]==0x14))||((buffer_wie[0]==0x51
             -)&&(buffer_wie[1]==0xc1)&&(buffer_wie[2]==0x14)))
1609   4                {
1610   5                  lock1=1;
1611   5                  lock2=1;
1612   5                  seg=cte_seg+14;
1613   5                  TH0=0X00;           //Inicializa timer                    *           
1614   5                  TL0=0X00;
1615   5                  TF0=0;
1616   5                }
1617   4              }
1618   3      
1619   3      //--------------------------------------------------------------------------------------------------------
             ----*
1620   3        
1621   3            }
1622   2            else
1623   2            {
1624   3                
1625   3              if (completo==1)
1626   3              {
1627   4                id_Access();                                        /*se muestra el nuemro de la tarjeta pero no hay presencia*/
1628   4            
1629   4                limpia_data();  
1630   4                SendRtaBus(ERROR_LOOP);                               /*envia un msj a segundario q hay un error en el loop*/
1631   4                lcd_text(1,0,(unsigned char *) "ERROR EN LOOP...");
1632   4                g_cEstadoTxSoft &=~LECTURA_WIEG_TX;
1633   4              }
1634   3              
1635   3      
1636   3            }
1637   2        
1638   2      //------------------------------------------------------------------------------------------*
1639   2      //    INTERRUPCION DEL AUXILIAR
1640   2      //------------------------------------------------------------------------------------------*
1641   2          if (ready==0)             //Recibe del procesador Aux (Interrupcion generada del Aux)
1642   2          {
1643   3            buffer_bus[0]=0xff;
1644   3            buffer_bus[1]=0xff;
1645   3            rx_bus();
1646   3          /*
1647   3            lcd_text(0,0,(unsigned char *) " pto P0 ");     //jp
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 29  

1648   3            temp=0xff;
1649   3            while(temp){temp--;}//jp
1650   3      //-----------------------------------  TEST
1651   3            for (k=0; k<num_data; k++)
1652   3              {
1653   3              tx_chr(buffer_bus[k]);
1654   3            }
1655   3      //-----------------------------------   
1656   3          */
1657   3            if (num_data!=0)
1658   3            {
1659   4                if ((num_data==1)&&(buffer_bus[0]==ACK))                        // ERRORES
1660   4              {
1661   5                Habilita_Lectura=1;
1662   5              }
1663   4      
1664   4              if ((num_data==1)&&(buffer_bus[0]>=0xDF)&&(buffer_bus[0]<=0xef))            // ERRORES
1665   4              {
1666   5                  prg_disp();
1667   5                if  ((buffer_bus[0]==0xe2)||(buffer_bus[0]==0xe3)||(buffer_bus[0]==0xe4))
1668   5                {
1669   6                    cont(0xc0);
1670   6                  for (k=0;err_mifare[k]!='\0';k++)
1671   6                  {
1672   7                      vdato(err_mifare[k]);
1673   7                  }
1674   6                  cont(0xcE);
1675   6                  vdato((buffer_bus[0]&0x0f)+0x30);
1676   6                }
1677   5      
1678   5                else if(buffer_bus[0]==0xe0)
1679   5                {
1680   6                      cont(0xc0);
1681   6                  for (k=0;sin_sensor[k]!='\0';k++)
1682   6                  {
1683   7                      vdato(sin_sensor[k]);
1684   7                  }
1685   6      
1686   6                }
1687   5                else if(buffer_bus[0]==0xe1)
1688   5                {
1689   6                      
1690   6                  lcd_text(1,0,(unsigned char *) "TARJETA INVALIDA");
1691   6                   
1692   6                }
1693   5                else if(buffer_bus[0]==0xe5)
1694   5                {
1695   6                      cont(0xc0);
1696   6                  for (k=0;err_cod[k]!='\0';k++)
1697   6                  {
1698   7                      vdato(err_cod[k]);
1699   7                  }
1700   6                }
1701   5                else if(buffer_bus[0]==0xe6)
1702   5                {
1703   6                    cont(0xc0);
1704   6                  for (k=0;err_in[k]!='\0';k++)
1705   6                  {
1706   7                      vdato(err_in[k]);
1707   7                  }
1708   6                }
1709   5                else if(buffer_bus[0]==0xe7)
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 30  

1710   5                {
1711   6                
1712   6                  cont(0xc0);
1713   6                  lcd_puts((unsigned char *)"NO REGISTRA PAGO");
1714   6                  
1715   6                  
1716   6                  wait_long1(10000);
1717   6                  //{
1718   6                    //  vdato(err_sinpago[k]);
1719   6                  //}
1720   6                }
1721   5                else if(buffer_bus[0]==0xe8)
1722   5                {
1723   6                  cont(0xc0);
1724   6                  for (k=0;err_gracia[k]!='\0';k++)
1725   6                  {
1726   7                      vdato(err_gracia[k]);
1727   7                  }         
1728   6                }
1729   5      
1730   5                else if(buffer_bus[0]==0xe9)
1731   5                {
1732   6                  cont(0xc0);
1733   6                  for (k=0;err_out[k]!='\0';k++)
1734   6                  {
1735   7                      vdato(err_out[k]);
1736   7                  }         
1737   6                }
1738   5                else if(buffer_bus[0]==0xea)
1739   5                {
1740   6                  cont(0xc0);
1741   6                  for (k=0;err_data[k]!='\0';k++)
1742   6                  {
1743   7                      vdato(err_data[k]);
1744   7                  }         
1745   6                }
1746   5                else if(buffer_bus[0]==0xeB)
1747   5                {
1748   6                  cont(0xc0);
1749   6                  for (k=0;err_Caja[k]!='\0';k++)
1750   6                  {
1751   7                      vdato(err_Caja[k]);
1752   7                  }         
1753   6                }
1754   5                else if(buffer_bus[0]==0xec)
1755   5                {
1756   6                  cont(0xc0);
1757   6                  for (k=0;tarjeta_venc[k]!='\0';k++)
1758   6                  {
1759   7                      vdato(tarjeta_venc[k]);
1760   7                  }         
1761   6                }
1762   5                else if (buffer_bus[0]==0xed)
1763   5                {
1764   6                  cont(0xc0);
1765   6                  for (k=0;sin_resp[k]!='\0';k++)
1766   6                  {
1767   7                      vdato(sin_resp[k]);
1768   7                  }         
1769   6                }
1770   5                else if (buffer_bus[0]==0xee)
1771   5                {
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 31  

1772   6                  cont(0xc0);
1773   6                  for (k=0;resp_NACK[k]!='\0';k++)
1774   6                  {
1775   7                      vdato(resp_NACK[k]);
1776   7                  }         
1777   6                }
1778   5      
1779   5                else if (buffer_bus[0]==0xeF)
1780   5                {
1781   6                  cont(0xc0);
1782   6                  vdato('T');
1783   6                  vdato('A');
1784   6                  vdato('R');
1785   6                  vdato('J');
1786   6                  vdato('E');
1787   6                  vdato('T');
1788   6                  vdato('A');
1789   6                  vdato(' ');
1790   6                  vdato('A');
1791   6                  vdato('T');
1792   6                  vdato('A');
1793   6                  vdato('S');
1794   6                  vdato('C');
1795   6                  vdato('A');
1796   6                  vdato('D');
1797   6                  vdato('A');
1798   6      
1799   6      //            lock1=1;
1800   6                  Atascado=1;
1801   6                  seg=cte_seg;
1802   6                }
1803   5                else if (buffer_bus[0]==0xDF)
1804   5                { 
1805   6                  prg_disp();
1806   6                  cont(0xc0);
1807   6                  lcd_puts((unsigned char *) "TAR. SIN FORMATO");
1808   6                  
1809   6                }
1810   5                msg_error=1;
1811   5                seg=cte_seg;
1812   5                TH0=0X00;               //Inicializa timer            *           
1813   5                TL0=0X00;
1814   5                TF0=0;
1815   5              }
1816   4              else if ((num_data==1)&&(buffer_bus[0]==0xa0))
1817   4              {
1818   5                audio1=1;
1819   5                msg1=1;
1820   5                seg=cte_seg;
1821   5              }
1822   4              else if ((num_data==1)&&(buffer_bus[0]==0xa1))
1823   4              {
1824   5                audio2=1;
1825   5                msg2=1;
1826   5                seg=cte_seg;
1827   5                lcd_text(0,0,(unsigned char *) "DIRIJASE A CAJA ");
1828   5              }
1829   4              else if ((num_data==1)&&(buffer_bus[0]==0xa2))
1830   4              {
1831   5                audio3=1;
1832   5                msg3=1;
1833   5                seg=cte_seg;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 32  

1834   5              }
1835   4              else if ((num_data==1)&&(buffer_bus[0]==0xA3))
1836   4              {
1837   5                audio4=1;
1838   5                msg4=1;
1839   5                seg=cte_seg+14;
1840   5              }
1841   4              else if ((num_data==1)&&(buffer_bus[0]==0XAF))
1842   4              {
1843   5                cont(0xc0);
1844   5      
1845   5                vdato('C');
1846   5                vdato('O');
1847   5                vdato('N');
1848   5                vdato('T');
1849   5                vdato('.');
1850   5                vdato(' ');
1851   5                vdato('E');
1852   5                vdato('V');
1853   5                vdato('N');
1854   5                vdato(' ');
1855   5                vdato('I');
1856   5                vdato('N');
1857   5                vdato('I');
1858   5                vdato('C');
1859   5                vdato('I');
1860   5                vdato('.');
1861   5      
1862   5              }
1863   4              else if ((num_data==1)&&(buffer_bus[0]=='N'))
1864   4              {
1865   5                notifyEVP=1;
1866   5      
1867   5                cont(0x80);
1868   5                for (k=0;MSGnotify[k]!='\0';k++)
1869   5                {
1870   6                  vdato(MSGnotify[k]);
1871   6                }
1872   5                cont(0x8D);
1873   5                vdato('N');
1874   5                if (ACCESO_USE_LPR==1)
1875   5                {
1876   6                  vdato(' ');
1877   6                  vdato('M');
1878   6                }
1879   5                
1880   5              }
1881   4              else if ((num_data==1)&&(buffer_bus[0]=='S'))
1882   4              {
1883   5                notifyEVP=0;
1884   5                cont(0x80);
1885   5                for (k=0;MSGnotify[k]!='\0';k++)
1886   5                {
1887   6                  vdato(MSGnotify[k]);
1888   6                }
1889   5                cont(0x8D);
1890   5                vdato('S');
1891   5                if (ACCESO_USE_LPR==1)
1892   5                {
1893   6                  vdato(' ');
1894   6                  vdato('M');
1895   6                }
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 33  

1896   5      
1897   5      
1898   5      
1899   5              }
1900   4              else if ((num_data==1)&&(buffer_bus[0]=='P'))
1901   4              {
1902   5                notifyEVP=0;
1903   5                cont(0xc0);
1904   5                for (k=0;matchPlate[k]!='\0';k++)
1905   5                {
1906   6                  vdato(matchPlate[k]);
1907   6                }
1908   5              }
1909   4              else if ((num_data==1)&&(buffer_bus[0]=='D'))
1910   4              {
1911   5                cont(0xc0);
1912   5                for (k=0;SendCode[k]!='\0';k++)
1913   5                {
1914   6                  vdato(SendCode[k]);
1915   6                }
1916   5              }
1917   4              else if ((num_data==1)&&(buffer_bus[0]==0XF1))
1918   4              {
1919   5                cont(0xc0);
1920   5      
1921   5                vdato('U');
1922   5                vdato('N');
1923   5                vdato(' ');
1924   5                vdato('M');
1925   5                vdato('O');
1926   5                vdato('M');
1927   5                vdato('E');
1928   5                vdato('N');
1929   5                vdato('T');
1930   5                vdato('O');
1931   5                vdato('.');
1932   5                vdato('.');
1933   5                vdato('.');
1934   5                vdato(' ');
1935   5                vdato(' ');
1936   5                vdato(' ');
1937   5      
1938   5      
1939   5      
1940   5              }
1941   4              else if ((num_data==1)&&(buffer_bus[0]==PICO_PLACA))
1942   4              {
1943   5                cont(0xc0);
1944   5      
1945   5                vdato('P');
1946   5                vdato('I');
1947   5                vdato('C');
1948   5                vdato('O');
1949   5                vdato(' ');
1950   5                vdato('Y');
1951   5                vdato(' ');
1952   5                vdato('P');
1953   5                vdato('L');
1954   5                vdato('A');
1955   5                vdato('C');
1956   5                vdato('A');
1957   5                vdato('.');
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 34  

1958   5                vdato('.');
1959   5                vdato('.');
1960   5                vdato(' ');
1961   5      
1962   5              }
1963   4              else if ((num_data==1)&&(buffer_bus[0]==0XF8))
1964   4              {
1965   5                cont(0xc0);
1966   5      
1967   5                vdato('V');
1968   5                vdato('E');
1969   5                vdato('H');
1970   5                vdato('I');
1971   5                vdato('.');
1972   5                vdato(' ');
1973   5                vdato('I');
1974   5                vdato('N');
1975   5                vdato('V');
1976   5                vdato('A');
1977   5                vdato('L');
1978   5                vdato('I');
1979   5                vdato('D');
1980   5                vdato('O');
1981   5                vdato('.');
1982   5                vdato('.');
1983   5                vdato('.');
1984   5      
1985   5      
1986   5              }
1987   4              else if ((num_data==1)&&(buffer_bus[0]==0XF9))
1988   4              {
1989   5                cont(0xc0);
1990   5      
1991   5                vdato('S');
1992   5                vdato('A');
1993   5                vdato('L');
1994   5                vdato('I');
1995   5                vdato('D');
1996   5                vdato('A');
1997   5                vdato(' ');
1998   5                vdato('R');
1999   5                vdato('E');
2000   5                vdato('C');
2001   5                vdato('H');
2002   5                vdato('A');
2003   5                vdato('Z');
2004   5                vdato('A');
2005   5                vdato('D');
2006   5                vdato('A');
2007   5      
2008   5      
2009   5              }
2010   4              else if ((num_data==1)&&(buffer_bus[0]==SIN_TARJETAS))
2011   4              {
2012   5                cont(0xc0);
2013   5      
2014   5                vdato('S');
2015   5                vdato('I');
2016   5                vdato('N');
2017   5                vdato(' ');
2018   5                vdato('T');
2019   5                vdato('A');
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 35  

2020   5                vdato('R');
2021   5                vdato('J');
2022   5                vdato('E');
2023   5                vdato('T');
2024   5                vdato('A');
2025   5                vdato('S');
2026   5                vdato(' ');
2027   5                vdato(' ');
2028   5                vdato(' ');
2029   5                vdato(' ');
2030   5      
2031   5      
2032   5              }
2033   4              else if ((num_data==1)&&(buffer_bus[0]==HORARIO))
2034   4              {
2035   5                cont(0xc0);
2036   5      
2037   5                vdato('F');
2038   5                vdato('U');
2039   5                vdato('E');
2040   5                vdato('R');
2041   5                vdato('A');
2042   5                vdato(' ');
2043   5                vdato('D');
2044   5                vdato('E');
2045   5                vdato(' ');
2046   5                vdato('H');
2047   5                vdato('O');
2048   5                vdato('R');
2049   5                vdato('A');
2050   5                vdato('R');
2051   5                vdato('I');
2052   5                vdato('O');
2053   5      
2054   5      
2055   5              }
2056   4              else if ((num_data==1)&&(buffer_bus[0]==IN_HORARIO))
2057   4              {
2058   5                cont(0x80);
2059   5      
2060   5                vdato(' ');
2061   5                vdato('E');
2062   5                vdato('N');
2063   5                vdato('T');
2064   5                vdato('R');
2065   5                vdato('A');
2066   5                vdato('D');
2067   5                vdato('A');
2068   5                vdato(' ');
2069   5                vdato('F');
2070   5                vdato('U');
2071   5                vdato('E');
2072   5                vdato('R');
2073   5                vdato('A');
2074   5                vdato(' ');
2075   5                vdato(' ');
2076   5      
2077   5                cont(0xc0);
2078   5      
2079   5                vdato('D');
2080   5                vdato('E');
2081   5                vdato(' ');
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 36  

2082   5                vdato('H');
2083   5                vdato('O');
2084   5                vdato('R');
2085   5                vdato('A');
2086   5                vdato('R');
2087   5                vdato('I');
2088   5                vdato('O');
2089   5                vdato(' ');
2090   5                vdato('-');
2091   5                vdato('C');
2092   5                vdato('A');
2093   5                vdato('J');
2094   5                vdato('A');
2095   5      
2096   5              }
2097   4              else if ((num_data==1)&&(buffer_bus[0]==DiaX))
2098   4              {
2099   5                cont(0x80);
2100   5      
2101   5                vdato('D');
2102   5                vdato('I');
2103   5                vdato('A');
2104   5                vdato(' ');
2105   5                vdato('D');
2106   5                vdato('E');
2107   5                vdato(' ');
2108   5                vdato('A');
2109   5                vdato('C');
2110   5                vdato('C');
2111   5                vdato('E');
2112   5                vdato('S');
2113   5                vdato('O');
2114   5                vdato(' ');
2115   5                vdato(' ');
2116   5                vdato(' ');
2117   5      
2118   5                cont(0xc0);
2119   5      
2120   5                vdato('I');
2121   5                vdato('N');
2122   5                vdato('V');
2123   5                vdato('A');
2124   5                vdato('L');
2125   5                vdato('I');
2126   5                vdato('D');
2127   5                vdato('O');
2128   5                vdato(' ');
2129   5                vdato(' ');
2130   5                vdato(' ');
2131   5                vdato(' ');
2132   5                vdato(' ');
2133   5                vdato(' ');
2134   5                vdato(' ');
2135   5                vdato(' ');
2136   5      
2137   5              }
2138   4              else if ((num_data==1)&&(buffer_bus[0]==0XFb))
2139   4              {
2140   5                cont(0xc0);
2141   5      
2142   5                vdato('E');
2143   5                vdato('R');
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 37  

2144   5                vdato('R');
2145   5                vdato('O');
2146   5                vdato('R');
2147   5                vdato(' ');
2148   5                vdato('T');
2149   5                vdato('R');
2150   5                vdato('A');
2151   5                vdato('N');
2152   5                vdato('S');
2153   5                vdato('P');
2154   5                vdato('O');
2155   5                vdato('R');
2156   5                vdato('T');
2157   5                vdato('E');
2158   5        
2159   5              }
2160   4              else if ((num_data==1)&&(buffer_bus[0]==0XFC))
2161   4              {
2162   5                cont(0xc0);
2163   5      
2164   5                vdato('N');
2165   5                vdato('O');
2166   5                vdato(' ');
2167   5                vdato('E');
2168   5                vdato('S');
2169   5                vdato(' ');
2170   5                vdato('M');
2171   5                vdato('E');
2172   5                vdato('N');
2173   5                vdato('S');
2174   5                vdato('U');
2175   5                vdato('A');
2176   5                vdato('L');
2177   5                vdato('.');
2178   5                vdato('.');
2179   5                vdato('.');
2180   5        
2181   5              }
2182   4              else if ((num_data==1)&&(buffer_bus[0]==0XFD))
2183   4              {
2184   5                cont(0xc0);
2185   5      
2186   5                vdato('N');
2187   5                vdato('O');
2188   5                vdato(' ');
2189   5                vdato('E');
2190   5                vdato('S');
2191   5                vdato(' ');
2192   5                vdato('D');
2193   5                vdato('E');
2194   5                vdato(' ');
2195   5                vdato('R');
2196   5                vdato('O');
2197   5                vdato('T');
2198   5                vdato('A');
2199   5                vdato('C');
2200   5                vdato('I');
2201   5                vdato('O');
2202   5        
2203   5              }
2204   4              else if ((num_data==1)&&(buffer_bus[0]==0XFe))
2205   4              {
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 38  

2206   5                cont(0xc0);
2207   5      
2208   5                vdato('B');
2209   5                vdato('I');
2210   5                vdato('E');
2211   5                vdato('N');
2212   5                vdato('V');
2213   5                vdato('E');
2214   5                vdato('N');
2215   5                vdato('I');
2216   5                vdato('D');
2217   5                vdato('O');
2218   5                vdato(' ');
2219   5                vdato(' ');
2220   5                vdato(' ');
2221   5                vdato(' ');
2222   5                vdato(' ');
2223   5                vdato(' ');
2224   5        
2225   5              }
2226   4              else if ((num_data==1)&&(buffer_bus[0]==0XFF))
2227   4              {
2228   5                cont(0x80);
2229   5      
2230   5                vdato('G');
2231   5                vdato('R');
2232   5                vdato('A');
2233   5                vdato('C');
2234   5                vdato('I');
2235   5                vdato('A');
2236   5                vdato('S');
2237   5                vdato('.');
2238   5                vdato('.');
2239   5                vdato('.');
2240   5                vdato(' ');
2241   5                vdato(' ');
2242   5                vdato(' ');
2243   5                vdato(' ');
2244   5                vdato(' ');
2245   5                vdato(' ');
2246   5        
2247   5              }
2248   4              else if ((buffer_bus[0]==0x02)&&(buffer_bus[1]=='i'))  // (num_data>=18)&&
2249   4              {
2250   5      
2251   5                  prg_disp();
2252   5                  
2253   5                  lcd_text(0,0,(unsigned char *) "Fecha Hora:     ");   //  muestra en el lcd la fecha                  
             -                   *
2254   5      
2255   5      //            cont(0x80);
2256   5      //            for (k=0;informa[k]!='\0';k++)
2257   5      //            {
2258   5      //              vdato(informa[k]);
2259   5      //            }
2260   5            
2261   5                  cont(0xc0); 
2262   5                  vdata_clk(buffer_bus[2]);     //año  [2]
2263   5                  vdato('/');
2264   5      
2265   5                  vdata_clk(buffer_bus[3]);     //mes
2266   5                  vdato('/');
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 39  

2267   5      
2268   5                  vdata_clk(buffer_bus[4]);   //dia
2269   5                  vdato(' ');
2270   5      
2271   5                  vdata_clk(buffer_bus[5]);   //hora
2272   5                  vdato(':');
2273   5      
2274   5                  vdata_clk(buffer_bus[6]);   //minuto
2275   5                    
2276   5                    vdata_clk(buffer_bus[7]);   //segundo
2277   5      
2278   5                  cont(0x8c);
2279   5                  if (buffer_bus[8]==1)
2280   5                  {
2281   6                    vdato('D');
2282   6                    vdato('o');
2283   6                    vdato('m');
2284   6                  
2285   6                  }
2286   5                  else if (buffer_bus[8]==2)
2287   5                  {
2288   6                    vdato('L');
2289   6                    vdato('u');
2290   6                    vdato('n');
2291   6      
2292   6                  }
2293   5                  else if (buffer_bus[8]==3)
2294   5                  {
2295   6                    vdato('M');
2296   6                    vdato('a');
2297   6                    vdato('r');
2298   6      
2299   6                  }
2300   5                  else if (buffer_bus[8]==4)
2301   5                  {
2302   6                    vdato('M');
2303   6                    vdato('i');
2304   6                    vdato('e');
2305   6                  }
2306   5                  else if (buffer_bus[8]==5)
2307   5                  {
2308   6                    vdato('J');
2309   6                    vdato('u');
2310   6                    vdato('e');
2311   6                  }
2312   5                  else if (buffer_bus[8]==6)
2313   5                  {
2314   6                    vdato('V');
2315   6                    vdato('i');
2316   6                    vdato('e');
2317   6                  }
2318   5                  else if (buffer_bus[8]==7)
2319   5                  {
2320   6                    vdato('S');
2321   6                    vdato('a');
2322   6                    vdato('b');
2323   6                  }                         
2324   5              }
2325   4              else if ((buffer_bus[0]==0x02)&&(buffer_bus[1]=='I'))  // (num_data>=18)&&
2326   4              {
2327   5                cont(0x80);
2328   5                for (k=0;serie[k]!='\0';k++)
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 40  

2329   5                {
2330   6                  vdato(serie[k]);
2331   6                }
2332   5                  temp=num_data-2;
2333   5                cont(0xc0);
2334   5                num_chr=0;
2335   5                for (k=0; k<temp; k++)
2336   5                {
2337   6                  if (buffer_bus[k+2]==ETX)
2338   6                  {
2339   7                    k=temp+1;
2340   7                  }
2341   6                  else
2342   6                  {
2343   7                    vdato(buffer_bus[k+2]);
2344   7                    num_chr++;
2345   7                  }
2346   6                }
2347   5                for (k=0; k<(16-num_chr); k++)
2348   5                {
2349   6                  vdato(' ');
2350   6                }
2351   5              }
2352   4              else if ((buffer_bus[0]==0x02)&&(buffer_bus[1]=='D'))  // (num_data>=18)&&
2353   4              {
2354   5                prg_disp();
2355   5                 cont(0x80);
2356   5                lcd_puts((unsigned char *) "ID_CLIENTE:");
2357   5                  for(k=2;;k++)
2358   5                  {
2359   6                    if(buffer_bus[k]!=';')
2360   6                     {
2361   7                      vdato(buffer_bus[k]);
2362   7                     }  else break;
2363   6                  }
2364   5                cont(0xc0);
2365   5                k++;
2366   5                  lcd_puts((unsigned char *) "COD_PARK:");
2367   5                    for(i=2;;k++)
2368   5                    {
2369   6                      if(buffer_bus[k]!=';')
2370   6                      {
2371   7                        vdato(buffer_bus[k]);
2372   7                      }else break;
2373   6                    }
2374   5                }
2375   4              else if ((buffer_bus[0]==0x02)&&(buffer_bus[1]=='W')&&(buffer_bus[num_data-1]==ETX)&&(num_data==18))  /
             -/  
2376   4              {
2377   5                
2378   5                iTimeEsperaRtaLPR=0;
2379   5                
2380   5                Dato_OffLine=0;
2381   5                SalidaW=1;
2382   5      
2383   5                buffer_wie[0]=buffer_bus[4];
2384   5                buffer_wie[1]=buffer_bus[3];
2385   5                buffer_wie[2]=buffer_bus[2];
2386   5      
2387   5                YearIn=buffer_bus[6];
2388   5                MonthIn=buffer_bus[7];
2389   5                DayIn=buffer_bus[8];
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 41  

2390   5                HourIn=buffer_bus[9];
2391   5                MinutIn=buffer_bus[10];
2392   5        
2393   5                YearOut=buffer_bus[11];
2394   5                MonthOut=buffer_bus[12];
2395   5                DayOut=buffer_bus[13];
2396   5                HourOut=buffer_bus[14];
2397   5                MinutOut=buffer_bus[15];
2398   5                Tipo_Vehiculo=buffer_bus[16];
2399   5                 
2400   5      
2401   5                g_cEstadoTxSoft |= LECTURA_WIEG_TX;
2402   5                TimeOut_Wiegand=5;
2403   5      
2404   5                
2405   5              }
2406   4              else if ((buffer_bus[0]==0x02)&&(buffer_bus[1]=='W')) //  
2407   4              {
2408   5                iTimeEsperaRtaLPR=0;
2409   5                
2410   5                Dato_OffLine=0;
2411   5                SalidaW=0;
2412   5      
2413   5                buffer_wie[0]=buffer_bus[4];
2414   5                buffer_wie[1]=buffer_bus[3];
2415   5                buffer_wie[2]=buffer_bus[2];
2416   5                g_cEstadoTxSoft |= LECTURA_WIEG_TX;
2417   5                TimeOut_Wiegand=5;
2418   5      
2419   5                
2420   5              }
2421   4              else if ((buffer_bus[0]==0x02)&&((buffer_bus[1]=='M'))) //  
2422   4              {
2423   5      
2424   5                iTimeEsperaRtaLPR=0;
2425   5                 lcd_wiegand();
2426   5              //  lcd_text(0,0,(unsigned char *) "LECT.           ");
2427   5                //  cont(0x87);               // Visualiza FC + ID
2428   5      //ojo         ve_fc(buffer_wie[0]);
2429   5              //  cont(0x8b);               // Visualiza FC + ID
2430   5      //          ve_id(buffer_wie[1],buffer_wie[2]);
2431   5      
2432   5                Dato_OffLine=0;
2433   5                buffer_wie[0]=buffer_bus[4];
2434   5                buffer_wie[1]=buffer_bus[3];
2435   5                buffer_wie[2]=buffer_bus[2];
2436   5                g_cEstadoTxSoft |= LECTURA_WIEG_TX;
2437   5                TimeOut_Wiegand=5;
2438   5                TimeOut_Send_Acceso=cte_seg*5;
2439   5      
2440   5              }
2441   4              else if ((buffer_bus[0]==0x02)&&(buffer_bus[1]=='w')&&(buffer_bus[num_data-1]==ETX))  //   inf del mc au
             -x    jp
2442   4              {
2443   5                
2444   5                iTimeEsperaRtaLPR=0;
2445   5      
2446   5                Dato_OffLine=1;
2447   5                Off_Line_Salida=0;
2448   5                Dato_Placa=0;
2449   5      
2450   5                // buffer_bus[5];    Parte del codigo de la tarjeta 4 bytes
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 42  

2451   5              
2452   5                buffer_wie[0]=buffer_bus[4];
2453   5                buffer_wie[1]=buffer_bus[3];
2454   5                buffer_wie[2]=buffer_bus[2];
2455   5      
2456   5                YearIn=buffer_bus[6];
2457   5                MonthIn=buffer_bus[7];
2458   5                DayIn=buffer_bus[8];
2459   5                HourIn=buffer_bus[9];
2460   5                MinutIn=buffer_bus[10];
2461   5        
2462   5                if (num_data==18)
2463   5                {
2464   6                  YearOut=buffer_bus[11];
2465   6                  MonthOut=buffer_bus[12];
2466   6                  DayOut=buffer_bus[13];
2467   6                  HourOut=buffer_bus[14];
2468   6                  MinutOut=buffer_bus[15];
2469   6                  Tipo_Vehiculo=buffer_bus[16];
2470   6                  Off_Line_Salida=1;
2471   6                  Dato_Placa=0;
2472   6                                     // ojo jp
2473   6                   //lcd_text(1,0,(unsigned char *) "q pasa");
2474   6                   //while(1){};//jp
2475   6                }
2476   5                else if (num_data>18)
2477   5                {
2478   6      
2479   6                  YearOut=buffer_bus[11];
2480   6                  MonthOut=buffer_bus[12];
2481   6                  DayOut=buffer_bus[13];
2482   6                  HourOut=buffer_bus[14];
2483   6                  MinutOut=buffer_bus[15];
2484   6      
2485   6                  Tipo_Vehiculo=buffer_bus[num_data-2];
2486   6                    // lcd_text(1,0,(unsigned char *) buffer_bus[num_data-2]);  //jp
2487   6                  //   while(1){};//jp
2488   6                  Off_Line_Salida=1;
2489   6                  Dato_Placa=1;
2490   6                  NumDatosPlate=0;
2491   6                  Max_Len_Placa=10;
2492   6        
2493   6                  for (k=16; k<num_data-2; k++)
2494   6                  {
2495   7                    if (buffer_bus[k]!=ETX)
2496   7                    {
2497   8                      buffer_placa[k-16]=buffer_bus[k];
2498   8                      NumDatosPlate++;
2499   8                    }
2500   7                    else
2501   7                    {
2502   8                      k=num_data;
2503   8                    }
2504   7                    
2505   7                  }
2506   6                }
2507   5                else
2508   5                {
2509   6                  Tipo_Vehiculo=buffer_bus[11];
2510   6                  //   lcd_text(1,0,(unsigned char *) buffer_bus[11]);  //jp
2511   6                  //   while(1){};//jp
2512   6                  Off_Line_Salida=0;
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 43  

2513   6                }
2514   5                
2515   5      
2516   5                g_cEstadoTxSoft |= LECTURA_WIEG_TX;
2517   5                TimeOut_Wiegand=10;
2518   5       
2519   5              }
2520   4              else if ((buffer_bus[0]==STX)&&((buffer_bus[1]=='P')||(buffer_bus[1]=='T')||(buffer_bus[1]=='V')||(buf
             -fer_bus[1]=='E')||(buffer_bus[1]=='G')))  //  
2521   4              {
2522   5                iTimeEsperaRtaLPR=0;
2523   5                
2524   5                Rechazo=buffer_bus[1];
2525   5                len_buffer=num_data;
2526   5      //          len_buffer=buffer_bus[2];               //  Numero de Datos recibidos del Secunadario
2527   5                BorraLCD_L1();
2528   5                send_markCashierAut=0;                  // Incializa Marca de Liquidacion en Cajero
2529   5                Flag_Dcto=0;                      // Inicializa bandera de Salida con descuento
2530   5                cont(0x80);                       // Visualiza Lectura (hasta 1er separador)
2531   5                for (k=3; k<len_buffer; k++)            // Chequea datos
2532   5                {
2533   6                  if (((buffer_bus[k]>='0')&&(buffer_bus[k]<='9'))||((buffer_bus[k]>='A')&&(buffer_bus[k]<='Z'))||(buf
             -fer_bus[k]=='-')||(buffer_bus[k]=='.'))
2534   6                  {
2535   7                    datos_validos=1;
2536   7                  }
2537   6                  else
2538   6                  {
2539   7                    datos_validos=0;
2540   7                    k=len_buffer+1;
2541   7                  }
2542   6                  vdato(buffer_bus[k]);
2543   6                }
2544   5                if  (datos_validos==1)
2545   5                {
2546   6      //--------------------------------------------------------------------------------------------------------
             ------------------------------
2547   6                  i=0;
2548   6                  Tipo_Vehiculo=0;                 // Borra Tipo
2549   6                  for (k=0; k<len_buffer; k++)           // Busca Separador de Datos para Tipo Vehiculo
2550   6                  {
2551   7                    if (buffer_bus[k]=='.')
2552   7                    {
2553   8                      Tipo_Vehiculo=buffer_bus[k+1];      // Almacena Tipo Vehiculo de la tarjeta
2554   8                      k=len_buffer;
2555   8                    }
2556   7                  }
2557   6                  if (Tipo_Vehiculo!=0)
2558   6                  {
2559   7                    len_buffer=len_buffer-0x05;           // Quita: STX Letra #  punto TipoVehiculo = 5 Caracteres del tota
             -l
2560   7                  }
2561   6      //--------------------------------------------------------------------------------------------------------
             ------------------------------- 
2562   6                  g_cEstadoTxSoft |= LECTURA_COD_TX;
2563   6                  
2564   6                  for (k=0; k<len_buffer; k++)
2565   6                  {
2566   7                    buffer_ticket[k]=buffer_bus[k+3];       //
2567   7                  }
2568   6      
2569   6                  //Habilita_Lectura=0;               // Inhabilita Aproximacion
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 44  

2570   6                  //lcd_text(1,0,(unsigned char *) "APX. NO ACTIVA  ");
2571   6                }
2572   5                TimeOutLinea=TIMEW;
2573   5                TimeOut_Codigo=30;
2574   5              }
2575   4      //--------------------------------------------------------------------------------------------------------
             ------------------------------*
2576   4              else if ((buffer_bus[0]==STX)&&((buffer_bus[1]=='a'))&&(buffer_bus[num_data-1]==ETX)) //      STX "a" Ti
             -quete - Fecha_In - LPR ETX
2577   4              {
2578   5                  
2579   5      //            tx_chr(ACK);
2580   5      
2581   5                  iTimeEsperaRtaLPR=0;
2582   5      
2583   5      
2584   5                  Tiquete_Placa=1;
2585   5                  Tiquete_Salida=0;
2586   5                  NumChrTicket=0;
2587   5      
2588   5                  for (k=2; k<num_data; k++)            // Busca Separador de Datos para Tipo Vehiculo
2589   5                  {
2590   6                    if (buffer_bus[k]=='-')
2591   6                    {
2592   7                      Ini_Fecha=k+1;
2593   7                      k=num_data;
2594   7                    }
2595   6                  }
2596   5                  
2597   5                
2598   5      
2599   5                  for (k=2; k<Ini_Fecha-1; k++)
2600   5                  {
2601   6                              
2602   6                    buffer_ticket[k-2]=buffer_bus[k];       //
2603   6                    NumChrTicket++;
2604   6                  }
2605   5                  
2606   5      
2607   5                    YearIn=buffer_bus[Ini_Fecha++];
2608   5                  MonthIn=buffer_bus[Ini_Fecha++];
2609   5                  DayIn=buffer_bus[Ini_Fecha++];
2610   5                  HourIn=buffer_bus[Ini_Fecha++];
2611   5                  MinutIn=buffer_bus[Ini_Fecha++];
2612   5      
2613   5      
2614   5                  Num_Char_LPR=0;
2615   5                  for (k=Ini_Fecha+1; k<num_data-1; k++)
2616   5                  {
2617   6                    buffer_placa[Num_Char_LPR++]=buffer_bus[k];
2618   6                  }
2619   5                  
2620   5                              
2621   5                  g_cEstadoTxSoft |= LECTURA_COD_TX;
2622   5                  TimeOutLinea=TIMEW;
2623   5                  TimeOut_Codigo=30;            
2624   5      
2625   5      
2626   5              }
2627   4      //--------------------------------------------------------------------------------------------------------
             ------------------------------*
2628   4              else if (((buffer_bus[0]==STX)&&(buffer_bus[num_data-1]==ETX))&&((buffer_bus[1]=='m')||(buffer_bus[1]=
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 45  

             -='n')||(buffer_bus[1]=='o')||(buffer_bus[1]=='A')||(buffer_bus[1]=='R'))) //  STX *** "m" "n" "o" *** ETX
2629   4              {
2630   5                if (buffer_bus[1]=='n')
2631   5                {
2632   6                  iTimeEsperaRtaLPR=0;
2633   6                  
2634   6                  ACCESO_USE_LPR=0;
2635   6                  cont(0x80);
2636   6                  for (k=0;MSGnotify[k]!='\0';k++)
2637   6                  {
2638   7                    vdato(MSGnotify[k]);
2639   7                  }
2640   6                  cont(0x8D);
2641   6                  (notifyEVP==1)?(vdato('N')):(vdato('S'));
2642   6                  
2643   6                  vdato(' ');
2644   6                  vdato('N');
2645   6      
2646   6      
2647   6                }
2648   5                else if (buffer_bus[1]=='m')
2649   5                {
2650   6                  ACCESO_USE_LPR=1;
2651   6      
2652   6                  cont(0x80);
2653   6                  for (k=0;MSGnotify[k]!='\0';k++)
2654   6                  {
2655   7                    vdato(MSGnotify[k]);
2656   7                  }
2657   6                  cont(0x8D);
2658   6                  (notifyEVP==1)?(vdato('N')):(vdato('S'));
2659   6                  
2660   6                  vdato(' ');
2661   6                  vdato('M');
2662   6                  
2663   6      
2664   6      
2665   6      
2666   6                }
2667   5                else if (buffer_bus[1]=='o')
2668   5                {
2669   6                  if (buffer_bus[2]=='0')
2670   6                  {
2671   7                    ACCESO_USE_LPR=0;
2672   7                    iTimeEsperaRtaLPR=0;
2673   7      
2674   7                    cont(0x80);
2675   7                    for (k=0;MSGnotify[k]!='\0';k++)
2676   7                    {
2677   8                      vdato(MSGnotify[k]);
2678   8                    }
2679   7                    cont(0x8D);
2680   7                    (notifyEVP==1)?(vdato('N')):(vdato('S'));
2681   7                    
2682   7                    vdato(' ');
2683   7                    vdato('o');
2684   7      
2685   7                  }
2686   6                  else if (buffer_bus[2]=='1')
2687   6                  {
2688   7                    ACCESO_USE_LPR=1;
2689   7                    cont(0x80);
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 46  

2690   7                    for (k=0;MSGnotify[k]!='\0';k++)
2691   7                    {
2692   8                      vdato(MSGnotify[k]);
2693   8                    }
2694   7                    cont(0x8D);
2695   7                    (notifyEVP==1)?(vdato('N')):(vdato('S'));
2696   7                    
2697   7                    vdato(' ');
2698   7                    vdato('M');
2699   7                  }
2700   6                }
2701   5                else if (buffer_bus[1]=='A')              // Acepta de LPR
2702   5                {
2703   6                  if (iTimeEsperaRtaLPR!=0)
2704   6                  {
2705   7                    iTimeEsperaRtaLPR=0;
2706   7      
2707   7                    buffer_wie[0]=buffer_wieLPR[0];
2708   7                    buffer_wie[1]=buffer_wieLPR[1];
2709   7                    buffer_wie[2]=buffer_wieLPR[2];
2710   7                    g_cEstadoTxSoft |= LECTURA_WIEG_TX;
2711   7                    TimeOut_Wiegand=5;
2712   7                    SalidaW=0;
2713   7                  }
2714   6       
2715   6                }
2716   5                else if (buffer_bus[1]=='R')            // Rechaza de LPR
2717   5                {
2718   6                      iTimeEsperaRtaLPR=0;
2719   6                    cont(0x80);
2720   6                    for (k=0;MSGnegado[k]!='\0';k++)
2721   6                    {
2722   7                      vdato(MSGnegado[k]);
2723   7                    }
2724   6       
2725   6                }
2726   5                buffer_bus[1]=0xff;                 
2727   5       
2728   5              }
2729   4      //--------------------------------------------------------------------------------------------------------
             ------------------------------*
2730   4              else if ((buffer_bus[0]==STX)&&((buffer_bus[1]=='s')||(buffer_bus[1]=='C'))&&(buffer_bus[num_data-1]==
             -ETX))  //      STX "s" Tiquete - Fecha_In - Fecha Out - LPR ETX
2731   4              {
2732   5                  
2733   5                  iTimeEsperaRtaLPR=0;
2734   5      
2735   5                  Tiquete_Placa=1;
2736   5                  Tiquete_Salida=1;
2737   5                  NumChrTicket=0;
2738   5      
2739   5                  if (buffer_bus[1]=='C')
2740   5                  {
2741   6                    send_markCashierAut=1;
2742   6                  }
2743   5                  else
2744   5                  {
2745   6                    send_markCashierAut=0;
2746   6                  }
2747   5      
2748   5      
2749   5      
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 47  

2750   5                  for (k=2; k<num_data; k++)            // Busca Separador de Datos para Tipo Vehiculo
2751   5                  {
2752   6                    if (buffer_bus[k]=='-')
2753   6                    {
2754   7                      Ini_Dcto=k+1;
2755   7                      k=num_data;
2756   7                    }
2757   6                  }
2758   5      
2759   5                  Cod_Dcto=buffer_bus[Ini_Dcto];
2760   5      
2761   5                  for (k=2; k<Ini_Dcto-1; k++)
2762   5                  {
2763   6                    buffer_ticket[k-2]=buffer_bus[k];       //
2764   6                    NumChrTicket++;
2765   6                  }
2766   5      
2767   5                  
2768   5                  Ini_Fecha=Ini_Dcto+2;
2769   5      
2770   5      
2771   5                    YearIn=buffer_bus[Ini_Fecha++];
2772   5                  MonthIn=buffer_bus[Ini_Fecha++];
2773   5                  DayIn=buffer_bus[Ini_Fecha++];
2774   5                  HourIn=buffer_bus[Ini_Fecha++];
2775   5                  MinutIn=buffer_bus[Ini_Fecha++];
2776   5      
2777   5                  Ini_Fecha++;
2778   5      
2779   5                  YearOut=buffer_bus[Ini_Fecha++];
2780   5                  MonthOut=buffer_bus[Ini_Fecha++];
2781   5                  DayOut=buffer_bus[Ini_Fecha++];
2782   5                  HourOut=buffer_bus[Ini_Fecha++];
2783   5                  MinutOut=buffer_bus[Ini_Fecha++];
2784   5      
2785   5                  Ini_Fecha++;
2786   5      
2787   5                  Tipo_Vehiculo=buffer_bus[Ini_Fecha++];
2788   5      
2789   5                  Num_Char_LPR=0;
2790   5                              
2791   5                  g_cEstadoTxSoft |= LECTURA_COD_TX;
2792   5                  TimeOutLinea=TIMEW;
2793   5                  TimeOut_Codigo=30;
2794   5                            
2795   5      
2796   5      
2797   5              }
2798   4              else if ((buffer_bus[0]==0x02)&&(buffer_bus[1]=='d')&&(buffer_bus[num_data-1]==ETX)&&(num_data==9)) //
             -    DINERO de SALDO
2799   4              {
2800   5                BorraLCD_L1();  
2801   5                  cont(0x80); 
2802   5      
2803   5                vdato('S');
2804   5                vdato('a');
2805   5                vdato('l');
2806   5                vdato('d');
2807   5                vdato('o');
2808   5                vdato(' ');
2809   5                vdato('D');
2810   5                vdato('i');
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 48  

2811   5                vdato('s');
2812   5                vdato('p');
2813   5                vdato('o');
2814   5                vdato('n');
2815   5                vdato('i');
2816   5                vdato('b');
2817   5                vdato('l');
2818   5                vdato('e'); 
2819   5      
2820   5                BorraLCD_L2();
2821   5                cont(0xc0);
2822   5                
2823   5                for (k=2; k<8; k++)
2824   5                {
2825   6                  vdato(buffer_bus[k]);
2826   6                }       
2827   5              }
2828   4              else                          //
2829   4              {
2830   5      //--------------------------------------------------------------------------------------------------------
             ------------------------------*
2831   5                len_buffer=num_data;                  //  Numero de Datos recibidos del Secunadario
2832   5                BorraLCD_L1();
2833   5      //--------------------------------------------------------------------------------------------------------
             ------------------------------*
2834   5                Tipo_Vehiculo=0;                  // Borra Tipo
2835   5                for (k=0; k<len_buffer; k++)            // Busca Separador de Datos para Tipo Vehiculo
2836   5                {
2837   6                  if (buffer_bus[k]=='.')
2838   6                  {
2839   7                    Tipo_Vehiculo=buffer_bus[k+1];        // Almacena Tipo Vehiculo de la tarjeta
2840   7                    k=len_buffer;
2841   7                  }
2842   6                }
2843   5                if (Tipo_Vehiculo!=0)               // H T B M C (LETRAS DEL TIPO DE VEHICULO)
2844   5                {
2845   6                    len_buffer=len_buffer-0x02;           // Quita: punto TipoVehiculo = 2 Caracteres del total
2846   6                }
2847   5      //--------------------------------------------------------------------------------------------------------
             -------------------------------
2848   5                send_markCashierAut=0;                 // Incializa Marca de Liquidacion en Cajero
2849   5                Flag_Dcto=0;                     // Inicializa bandera de Salida con descuento
2850   5                i=0;
2851   5                for (k=0; k<len_buffer; k++)             // Busca Separador de Datos
2852   5                {
2853   6                  if (buffer_bus[k]=='-')
2854   6                  {
2855   7                    PosComa[i++]=k;
2856   7                  }
2857   6                }
2858   5      //--------------------------------------------------------------------------------------------------------
             -------------------------------
2859   5                (i!=0)?(NumDatValidar=PosComa[0]+1):(NumDatValidar=len_buffer);   // EXTRAE SOLO EL CODIGO PARA VALID
             -AD DATOS
2860   5      //--------------------------------------------------------------------------------------------------------
             -------------------------------
2861   5                cont(0x80);                       // Visualiza Lectura (hasta 1er separador)
2862   5                for (k=0; k<NumDatValidar; k++)           // Chequea datos
2863   5                {
2864   6                  if (((buffer_bus[k]>='0')&&(buffer_bus[k]<='9'))||((buffer_bus[k]>='A')&&(buffer_bus[k]<='Z'))||(buf
             -fer_bus[k]=='-')||(buffer_bus[k]=='.'))
2865   6                  {
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 49  

2866   7                    datos_validos=1;
2867   7                  }
2868   6                  else
2869   6                  {
2870   7                    datos_validos=0;
2871   7                    k=NumDatValidar+1;
2872   7                  }
2873   6                  vdato(buffer_bus[k]);
2874   6                }
2875   5      //----------------------------------------------------------------------
2876   5                if  (datos_validos==1)
2877   5                {
2878   6                  iTimeEsperaRtaLPR=0;
2879   6                  
2880   6                  g_cEstadoTxSoft |= LECTURA_COD_TX;
2881   6                
2882   6                  //Habilita_Lectura=0;               // Inhabilita Aproximacion
2883   6                  //lcd_text(1,0,(unsigned char *) "APX. NO ACTIVA  ");
2884   6              
2885   6                  if (i!=0)
2886   6                  {
2887   7                    if (i==1)
2888   7                    {
2889   8                      if ((len_buffer-1-PosComa[0])==1)       // Solo Cod Descuento, Evalua cantidad de datos si es 1 xq e
             -s solo codigo Dcto
2890   8                      {
2891   9                        for (k=0; k<len_buffer; k++)
2892   9                        {
2893  10                          buffer_ticket[k]=buffer_bus[k];
2894  10                    
2895  10                        }
2896   9                        Flag_Dcto=1;
2897   9                        Cod_Dcto= buffer_ticket[len_buffer-1];
2898   9                        vdato('D');
2899   9                        vdato(Cod_Dcto);
2900   9                        len_buffer=len_buffer-2;                
2901   9                      }
2902   8                      else                      // Solo Liquidacion en Cajero Posee mas de un dato, o sea la fecha
2903   8                      {
2904   9                        Flag_Dcto=0;
2905   9                        for (k=0; k<PosComa[0]; k++)
2906   9                        {
2907  10                          buffer_ticket[k]=buffer_bus[k];
2908  10                          
2909  10                        }
2910   9                                          
2911   9                        if ((len_buffer-1-PosComa[0])==5)     // 5 datos de: YMDHM  (Año Mes Dia Hor Min)
2912   9                        {
2913  10                          send_markCashierAut=1;
2914  10      
2915  10                          vdato('C');
2916  10                          vdato('a');
2917  10                          vdato('j');
2918  10                          vdato('e');
2919  10                          vdato('r');
2920  10                          vdato('o');
2921  10      
2922  10                          Ini_Fecha=PosComa[0]+1; 
2923  10                                            
2924  10                          YearIn=buffer_bus[Ini_Fecha++];
2925  10                          MonthIn=buffer_bus[Ini_Fecha++];
2926  10                          DayIn=buffer_bus[Ini_Fecha++];
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 50  

2927  10                          HourIn=buffer_bus[Ini_Fecha++];
2928  10                          MinutIn=buffer_bus[Ini_Fecha];
2929  10                          
2930  10                        }
2931   9                        len_buffer=PosComa[0];
2932   9                      } 
2933   8                    }
2934   7                    else                            // Posee Codigo de descuento y Liquidado en Cajero
2935   7                    {
2936   8                        for (k=0; k<PosComa[0]; k++)
2937   8                      {
2938   9                        buffer_ticket[k]=buffer_bus[k];
2939   9                      }
2940   8                      
2941   8                      Flag_Dcto=1;
2942   8                      Cod_Dcto= buffer_ticket[PosComa[0]+1];
2943   8                      
2944   8                      
2945   8                      send_markCashierAut=1;
2946   8                      Ini_Fecha=PosComa[1]+1;
2947   8                                          
2948   8                      YearIn=buffer_bus[Ini_Fecha++];
2949   8                      MonthIn=buffer_bus[Ini_Fecha++];
2950   8                      DayIn=buffer_bus[Ini_Fecha++];
2951   8                      HourIn=buffer_bus[Ini_Fecha++];
2952   8                      MinutIn=buffer_bus[Ini_Fecha];
2953   8      
2954   8                      len_buffer=PosComa[0];                                
2955   8                    }
2956   7                  }
2957   6                  else                            // Dato sin nada fuera de lo normal.
2958   6                  {
2959   7                    for (k=0; k<len_buffer; k++)
2960   7                    {
2961   8                      buffer_ticket[k]=buffer_bus[k];
2962   8                    }
2963   7                      Flag_Dcto=0;
2964   7                    send_markCashierAut=0;
2965   7                  }
2966   6      
2967   6                  TimeOutLinea=TIMEW;
2968   6                  TimeOut_Codigo=30;
2969   6                }
2970   5      //---------------------------------------------------------------------         
2971   5                }
2972   4            }
2973   3            else
2974   3            {
2975   4      //        cont(0x8E);
2976   4      //        temp=(buffer_bus[0]&0xf0);
2977   4      //        temp>>=4;
2978   4      //        vdato(temp);
2979   4      //        vdato((buffer_bus[0]&0x0f)+0x30);
2980   4      
2981   4            }
2982   3          }
2983   2      
2984   2          if(TF0==1)
2985   2          {
2986   3            TF0=0;
2987   3      //----------------------------------------------------------------------------------------------*
2988   3            if (TimeRetryCmd!=0)
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 51  

2989   3            {
2990   4              TimeRetryCmd--;
2991   4              if (TimeRetryCmd==0)
2992   4              {
2993   5                RetryCmd=1;
2994   5              }
2995   4            }
2996   3      //----------------------------------------------------------------------------------------------*
2997   3            if (TimeOut_Send_Acceso!=0)
2998   3            {
2999   4              TimeOut_Send_Acceso--;
3000   4            }
3001   3            if (OpenMensual_Apx!=0)
3002   3            {
3003   4              OpenMensual_Apx--;
3004   4            }
3005   3      //----------------------------------------------------------------------------------------------*
3006   3            if (iTimeEsperaRtaLPR!=0)
3007   3            {
3008   4              iTimeEsperaRtaLPR--;
3009   4              if (iTimeEsperaRtaLPR==0)
3010   4              {
3011   5                  buffer_wie[0]=buffer_wieLPR[0];
3012   5                  buffer_wie[1]=buffer_wieLPR[1];
3013   5                  buffer_wie[2]=buffer_wieLPR[2];
3014   5                  g_cEstadoTxSoft |= LECTURA_WIEG_TX;
3015   5                  TimeOut_Wiegand=5;
3016   5                  SalidaW=0;
3017   5              }
3018   4            }
3019   3      //----------------------------------------------------------------------------------------------*
3020   3            if (SignalAcceso==0)
3021   3            {
3022   4              if ((seg==cte_seg/2)||(seg==0))
3023   4              {
3024   5                if (toggle==1)
3025   5                {
3026   6                  ledv=0;
3027   6                  toggle=0;
3028   6                }
3029   5                else
3030   5                {
3031   6                  ledv=1;
3032   6                  toggle=1;
3033   6                }
3034   5              }
3035   4            }
3036   3            else
3037   3            {
3038   4              ledv=1;
3039   4              Habilita_Lectura=1;               // Habilita Lectura
3040   4            }
3041   3      //----------------------------------------------------------------------------------------------*
3042   3            seg--;
3043   3            if (seg==0)
3044   3            {
3045   4                if (FueraLinea==1)
3046   4              {
3047   5                if (Seg_OFF!=0)
3048   5                {
3049   6                  Seg_OFF--;
3050   6                }
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 52  

3051   5                if (Seg_OFF==0)
3052   5                {
3053   6                  buffer_bus[0]=OFF_LINE;   
3054   6                  tx_bus(1);
3055   6                  Seg_OFF=5;
3056   6                }
3057   5                }
3058   4              else
3059   4              {
3060   5                Seg_OFF=5;  
3061   5              }
3062   4                if (TimeOut_Codigo!=0)
3063   4              {
3064   5                TimeOut_Codigo--;
3065   5                if (TimeOut_Codigo==0)
3066   5                {
3067   6                  g_cEstadoTxSoft &=~LECTURA_COD_TX;
3068   6                  Rechazo=0;
3069   6      
3070   6                  Tiquete_Placa=0;
3071   6                  Tiquete_Salida=0;
3072   6                  Tipo_Vehiculo=' ';
3073   6                  send_markCashierAut=0;
3074   6                  if (FueraLinea==1)
3075   6                  {
3076   7                    BorraLCD_L1();
3077   7                    }
3078   6                }
3079   5              }
3080   4                if (TimeOut_Wiegand!=0)
3081   4              {
3082   5                TimeOut_Wiegand--;
3083   5                if (TimeOut_Wiegand==0)
3084   5                {
3085   6                  g_cEstadoTxSoft &=~LECTURA_WIEG_TX;
3086   6                  SalidaW=0;
3087   6                  Dato_Placa=0;
3088   6      //            Off_Line_Salida=0;
3089   6                }
3090   5              }
3091   4              if (TimeOutLinea!=0)
3092   4              {
3093   5                TimeOutLinea--;
3094   5                if (TimeOutLinea==0)                      /*fuera de linea*/
3095   5                {
3096   6                  TimeOutLinea=TIMEW;
3097   6                  cont(0x80);
3098   6                  for (k=0;k<16;k++)
3099   6                  {
3100   7                      vdato(' ');
3101   7                  }
3102   6                  g_cEstadoTxSoft &=~LECTURA_COD_TX;
3103   6                  g_cEstadoTxSoft &=~LECTURA_WIEG_TX;
3104   6                  g_cEstadoTxSoft &=~COD_PRINT_TX;
3105   6                  FueraLinea=1;
3106   6                  Rechazo=0;
3107   6                  Dato_Placa=0;
3108   6                  send_markCashierAut=0;
3109   6                  Tiquete_Placa=0;
3110   6                  Tiquete_Salida=0;
3111   6                  Dato_Placa=0;
3112   6                  cont(0xc0);
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 53  

3113   6                  for (k=0;linea[k]!='\0';k++)
3114   6                  {
3115   7                      vdato(linea[k]);
3116   7                  }
3117   6                  buffer_bus[0]=OFF_LINE;   
3118   6                  tx_bus(1);
3119   6                }
3120   5              }
3121   4               
3122   4      
3123   4              Atascado=0;
3124   4              lock1=0;
3125   4              lock2=0;
3126   4      
3127   4              audio1=0;
3128   4              msg1=0;
3129   4              audio2=0;
3130   4              msg2=0;
3131   4              audio3=0;
3132   4              msg3=0;
3133   4              audio4=0;
3134   4              msg4=0;
3135   4      
3136   4            
3137   4              seg=cte_seg;
3138   4              TH0=0X00;               //Inicializa timer                  *           
3139   4              TL0=0X00;
3140   4              TF0=0;
3141   4              msg_error=0;
3142   4      
3143   4      
3144   4            }
3145   3      
3146   3          }
3147   2      //********************************************************************************************************
             -***
3148   2          if ((RetryCmd==1)&&(ready==1))
3149   2          {
3150   3              RetryCmd=0;
3151   3            for (temp=0; temp<NumDatRetry; temp++)
3152   3            {
3153   4              buffer_bus[temp]=BufferRetry[temp];
3154   4            }
3155   3            tx_bus(NumDatRetry);
3156   3          }
3157   2      //********************************************************************************************************
             -***
3158   2          if (txACK==1)
3159   2          {
3160   3            tx_chr(ACK);                        
3161   3            txACK=0;
3162   3          }
3163   2      //********************************************************************************************************
             -***
3164   2          if( ((g_cEstadoComSoft==POLL_COM_SOF)||(g_cEstadoComSoft==ANALICE_STR_SOF)))  
3165   2          {                                        
3166   3        
3167   3      
3168   3            AtencComSoft();
3169   3          }
3170   2      //********************************************************************************************************
             -***
C51 COMPILER V9.59.0.0   PRINCIPAL_MF                                                      07/06/2020 15:21:15 PAGE 54  

3171   2          if ((Tx_Acceso==1)&&(ready==1))
3172   2          { 
3173   3            Tx_Acceso=0;
3174   3            buffer_bus[0]=ACCESO;
3175   3            tx_bus(1);
3176   3          
3177   3          //  lcd_text(0,0,(unsigned char *) "ENVIANDO ACCESO ");
3178   3      
3179   3              buffer_bus[0]=0x00;
3180   3            tx_bus(1);
3181   3          }           
3182   2      //***********************************************************************************************
3183   2          relevos_aux();
3184   2        }
3185   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  14601    ----
   CONSTANT SIZE    =    243    ----
   XDATA SIZE       =    515     112
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     38       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
